Un '''rootkit''' (le nom « outil de dissimulation d'activité » est également utilisé<ref> {{lien web |url=http://www.certa.ssi.gouv.fr/site/CERTA-2006-INF-002/index.html#Rootkit |titre=Note d'information du CERTA, Objet : Terminologie d'usage au CERTA |éditeur=[[Centre d'expertise gouvernemental de réponse et de traitement des attaques informatiques]] |consulté le=8 mars 2010}}</ref>), parfois simplement « kit », est un ensemble de techniques mises en œuvre par un ou plusieurs [[logiciel]]s, dont le but est d'obtenir et de pérenniser un accès (généralement non autorisé) à un ordinateur de la manière la plus furtive possible<ref name="whatis">{{en}} {{Lien web |url=http://searchmidmarketsecurity.techtarget.com/sDefinition/0,,sid198_gci547279,00.html |titre=What is rootkit? |éditeur=WhatIs.com|consulté le=16 mars 2010}}</ref>{{,}}<ref group="C" name="p3" />{{,}}<ref group="L" name="p8">Lacombe (2007), Définition d’un rootkit et comparaison avec les autres codes malicieux, {{p.}}8</ref>, à la différence d'autres [[logiciel malveillant|logiciels malveillants]]. Le terme peut désigner la technique de dissimulation ou, par [[métonymie]], un ensemble particulier d'objets informatiques mettant en œuvre cette technique.

Leur furtivité est assurée par plusieurs mécanismes de dissimulation {{Infra|Dissimulation}} : effacement de traces, masquage de l'activité et des communications, etc. Un rootkit peut s'installer dans un autre logiciel, une [[Bibliothèque logicielle|bibliothèque]] ou dans le [[noyau de système d'exploitation|noyau d'un système d'exploitation]]. Certains peuvent modifier l'[[hyperviseur]] fonctionnant au-dessus des systèmes ou le [[micrologiciel]] intégré dans un matériel. La plupart des rootkits servent à installer des [[Logiciel malveillant|logiciels malveillants]] sur les machines où l'accès est obtenu. Certains fournisseurs de matériels informatiques, tel [[Sony]], les utilisent pour s'assurer du respect des conditions d'utilisation de leurs produits par leurs clients. Certains kits ne jouent pas sur la discrétion mais sur le fait qu'enlever le kit serait une opération ardue<ref group="L" name="p14" />.

Pour l'« attaquant », l'utilité d'un rootkit est soit de mettre à disposition des ressources système (temps [[processeur]], connexions réseaux, etc.) sur une, voire plusieurs machines {{Infra|Mise en place de la charge utile}}, parfois en utilisant la « cible » comme intermédiaire pour une autre attaque ; soit d'espionner, d'accéder aux données stockées ou en transit sur la machine cible<ref group="L" name="p14">Lacombe (2007), Vers l’évaluation d’un rootkit, {{p.}}14</ref>.

Ils sont généralement classés parmi les [[Logiciel malveillant|logiciels malveillants]], mais pas toujours<ref group="L" name="p8" /> ; ils peuvent utiliser des « techniques virales » pour se transmettre (par exemple, en utilisant un virus ou un [[Cheval de Troie (informatique)|cheval de Troie]])<ref>Un rootkit falsifie le noyau du système d'exploitation, mais il n'est pas un vecteur de diffusion. Voir à ce sujet la section [[#Mode opératoire|Mode opératoire]].</ref>. Il existe des outils de détection et des méthodes de protection pour les contrer mais elles ne sont pas totalement efficaces.

== Historique ==

En 1989 sont apparus des programmes manipulant les [[Historique (informatique)|logs]] système (un log est un « journal des opérations », sorte de [[livre de bord]] où sont enregistrées les informations concernant l'état et l'activité d'un ordinateur) pour cacher leur présence. D'autres programmes permettaient de se dissimuler en manipulant les outils servant à vérifier les informations sur les utilisateurs, telles que les [[Commande informatique|commandes]] ''[[who (Unix)|who]]'', ''w'', ou ''last''<ref name="sans-histo">{{en}} {{pdf}} {{Lien web |url=http://www.sans.org/reading_room/whitepapers/honors/linux_kernel_rootkits_protecting_the_systems_1500?show=1500.php&cat=honors |titre=Linux kernel rootkits: protecting the system's « Ring-Zero » |date=mars 2004 |éditeur=SANS Institute|page=10,11}}</ref>, et ainsi être invisibles pour les administrateurs des machines.

Les premiers rootkits sont apparus en 1994 sur [[Linux]] et [[Solaris (système d'exploitation)|SunOS]]<ref name="sans-histo" />{{,}}<ref group="C" name="p3">Chuvakin (2003), {{p.}}3 : ''Executive Summary''</ref> ; en 1998, sous Windows, avec le célèbre [[Back Orifice]] {{Infra|Back Orifice}} ; et en 2004 apparaissait le premier rootkit sous [[Mac OS X]], ''WeaponX''<ref>{{en}} {{Lien web |url=http://www.phrack.org/issues.html?issue=66&id=16#article |titre=Developing Mac OSX kernel rootkits |auteur=ghalen and wowie |année=2009 |mois=juin |éditeur=Phrack Magazine}}</ref>.

Les analyses et les recherches sur les rootkits ont commencé à partir de 1997, avec la publication par le webzine [[Phrack]] d'un [[Cheval de Troie (informatique)|cheval de Troie]] détournant une partie du [[noyau Linux]] (le [[Loadable Kernel Module|LKM]], qui permet d'ajouter des modules au noyau pendant son fonctionnement)<ref group="C" name="p3" /> et ouvrant la porte aux techniques des rootkits actuels. Depuis, de nombreuses recherches et analyses ont été conduites : Phrack et plusieurs autres sites Web<ref>{{en}} {{Lien web |url=http://www.ossec.net/rootkits/ |titre=RootCheck |auteur=Daniel B. Cid |année=2006 |mois=mars |site=ossec.net |en ligne le=7 mars 2006 |consulté le=25 mars 2010}}</ref> publient régulièrement des travaux sur les rootkits. Certains projets se sont spécialisés dans ce domaine, comme [[chkrootkit]] débuté en [[1997 en informatique|1997]], dédié au développement d’un outil de détection de rootkits pour les plates-formes [[Linux]], *[[Berkeley Software Distribution|BSD]] ([[FreeBSD]], [[OpenBSD]] ...), [[Solaris (système d'exploitation)|Solaris]] et [[HP-UX]].

La mise au jour de rootkits passe par leur publication ou se fait grâce aux [[honeypot]]s, des machines sciemment vulnérables utilisées par les professionnels de la sécurité pour analyser le mode opératoire d'un attaquant. Les résultats obtenus sont régulièrement évoqués lors de conférences sur la sécurité, comme la [[Conférences Black Hat|conférence Black Hat]].

Certains rootkits peuvent être légitimes, pour permettre aux administrateurs de reprendre le contrôle d'une machine défaillante, pour suivre un ordinateur volé<ref name="lojack">{{pdf}} {{en}} {{Lien web |url=http://www.absolute.com/en_US/resources/public/FAQ/L4L-FAQ-E.pdf |titre=FAQ LoJack for Laptops |éditeur=AbsoluteSoftware}}</ref>, ou dans certains outils comme des [[émulateur de disque]] ([[DAEMON Tools]], [[Alcohol 120%]])<ref>{{Lien web |url=http://www.avg.com/fr-fr/faq?num=2346#faq_2346 |titre=avg.com, foire aux questions, n°2346 |éditeur=AVG Technologies}}</ref>. Mais le terme a perdu ce sens historique et évoque essentiellement des outils à finalité malveillante.

== Mode opératoire ==

=== Contamination ===

La première phase d'action d'un ''{{lang|en|rootkit}}'' consiste généralement à trouver un hôte vulnérable par [[Balayage de port|balayage]] d'un ensemble d'adresses IP ou grâce à une base de données d'IP vulnérables<ref group="C" name="p14">Chuvakin (2003), {{p.}}14 : ''Usage''</ref>.

L'étape suivante consiste à chercher à obtenir un accès au système, sans forcément que celui-ci soit un [[Authentification|accès privilégié]] (ou en [[mode administrateur]]). Il existe trois manières de contaminer un système, en suivant les techniques habituelles des [[Logiciel malveillant|programmes malveillants]].

Il est possible de mettre en œuvre un [[Exploit (informatique)|exploit]], c'est-à-dire profiter d'une vulnérabilité de sécurité connue ou non, à n'importe quel niveau du système ([[Logiciel applicatif|application]], [[système d'exploitation]], [[Basic Input Output System|BIOS]], etc.) Cette mise en œuvre peut être le fait d'un virus, mais elle résulte aussi souvent de [[Botnet|botnets]] qui réalisent des scans de machines pour identifier et exploiter les failles qui sont utiles à l'attaque.

Même s'il n'est pas un [[virus]] à proprement parler, un rootkit peut utiliser des ''techniques virales'' pour se transmettre, notamment par un [[Cheval de Troie (informatique)|cheval de Troie]]. Un virus peut avoir pour objet de répandre des rootkits sur les machines infectées. ''A contrario'', un virus peut aussi utiliser les techniques utilisées par des rootkits pour parfaire sa dissimulation<ref name="shevchenko">{{Lien web |url=http://www.viruslist.com/fr/analysis?pubid=200676165 |titre=Évolution des rootkits |auteur=Alisa Shevchenko |date=29 août 2008 |site=viruslist.com |éditeur=Kaspersky Lab |consulté le=30 avril 2010 }}</ref>.

Enfin, l’[[attaque par force brute]] permet d'accéder au système en profitant de la [[cassage de mot de passe|faiblesse des mots de passe]] de certains utilisateurs : il suffit de tester les mots de passe les plus courants.

Des outils, nommés « [[autorooter]]s », réunissent ces opérations de scan et d'exploit en une seule, ce qui peut faciliter la tâche de [[script kiddie]]s<ref group="C" name="p25">Chuvakin (2003), {{p.}}25 : ''End Notes''</ref> en laissant toutefois beaucoup de traces sur le réseau.

=== Modification du système et dissimulation ===

Une fois la contamination effectuée et l'accès obtenu, la phase suivante consiste à installer, au moyen de son script d'installation, les objets et outils nécessaires au rootkit<ref group="C" name="p14" /> ; c'est-à-dire les objets (programmes, bibliothèques) permettant la mise en place de la [[charge utile]] du rootkit, s'ils n'ont pas pu être installés durant la phase de contamination, ainsi que les outils et les modifications nécessaires à la dissimulation<ref group="L" name="p9">Lacombe (2007), L’architecture fonctionnelle d’un rootkit, {{p.}}9</ref>.

L'ouverture de [[porte dérobée|portes dérobées]], afin de permettre le contrôle de la machine, d'installer la charge utile et de pérenniser l'accès au système<ref name="whatis" />{{,}}<ref>{{en}} {{Lien web |url=http://en.seguridadpc.net/rootkits.htm |titre=Concept of rootkit}}</ref> est une technique très fréquente.

==== Dissimulation ====

Le rootkit cherche à dissimuler son activité pour minimiser le risque qu'on le découvre, afin de profiter le plus longtemps possible de l'accès frauduleux, mais aussi pour rendre sa désinstallation difficile<ref group="L" name="p14" />. Il va notamment dissimuler ses propres fichiers, les autres fichiers utilisés par l'attaquant, les processus qu'il exécute et les connexions qu'il va ouvrir<ref group="C" name="p8-9">Chuvakin (2003), {{p.}}8-9 : ''Concealing Evidence''</ref>. Cette faculté de dissimulation le différencie des virus, qui cherchent principalement à se répandre, bien que ces deux fonctions soient parfois jumelées pour une efficacité supérieure. Plusieurs méthodes de dissimulation peuvent être combinées.

La dissimulation de [[processus informatique]]s ou de fichiers permet de cacher l'activité du rootkit. Sous Windows, cela peut être réalisé en modifiant certaines clés de la [[base de registre]] ; sous Linux, on peut modifier les fichiers <code>/usr/include/proc.h</code> (processus à masquer) ou <code>/usr/include/file.h</code> (fichiers à masquer). L'attaquant peut aussi remplacer la commande <code>[[ls]]</code> pour qu'elle n'affiche pas certains dossiers<ref group="C" name="p10-12" />. Une fois en place, le rootkit peut supprimer ses propres fichiers d'installation pour éviter qu'il ne soit reconnu par une recherche de fichiers<ref group="C" name="p14" />.

Certains objets exécutables ou certaines bibliothèques sont remplacés par des programmes malveillants contrôlables à distance ([[Cheval de Troie (informatique)|chevaux de Troie]]), tout en conservant leur [[horodatage]]<ref group="C" name="p10-12" />. Il est également possible de détourner certains appels aux tables de travail utilisées par le système<ref group="L" name="tout">Lacombe (2007)</ref> par [[Hook (informatique)|hooking]], de manière à ce que des programmes d'apparence légitime exécutent les fonctions voulues par l'attaquant.

L'obtention des droits supérieurs par [[élévation des privilèges]] est également fréquemment rencontrée : cela permet notamment de désactiver les mécanismes de défense (comme un [[anti-virus]]) ou d'agir sur des objets de haut niveau de privilèges ([[pilotes de périphériques]], [[Noyau de système d'exploitation|noyau du système]], etc.) Un rootkit va ainsi pouvoir écouter les transactions sur le réseau pour trouver des mots de passe non [[Chiffrement|chiffrés]] (comme des connexions [[ftp]]) ou détourner une connexion [[ssh]] en interceptant l'appel système où le mot de passe n'est pas encore chiffré<ref group="C" name="p7-8" />.

Le rootkit tente de ne pas apparaître dans les [[fichier log|fichiers log]]<ref group="C" name="p8-9" />. Pour cela, il efface certaines entrées des logs ou, de manière beaucoup plus sophistiquée, utilisera des techniques de type « ''{{lang|en|Stealth by Design}}'' » (« furtif par conception »)<ref name="rutkowska" />, à savoir implémenter à l'intérieur du rootkit des fonctions système afin de ne pas avoir à appeler les fonctions standards du [[système d'exploitation]] et ainsi éviter l'enregistrement d'événements système suspects<ref group="C" name="p8-9" />. Il peut ainsi désactiver certains [[Daemon (informatique)|daemons]] et l'historique des [[Shell (informatique)|shells]]<ref group="C" name="p14" />.

Enfin, certains rootkits peuvent se charger intégralement en mémoire, ne laissant ainsi aucune trace sur les [[Stockage d'information|périphériques de stockage]] de la machine<ref group="L" name="p11">Lacombe (2007), La communication avec le rootkit, {{p.}}11</ref>.

En revanche, certaines activités ne pourront pas facilement être camouflées, notamment ce qui concerne la charge utile qui engendre de la charge réseau ou processeur {{Infra|Moyens_de_détection}} ; l'effort de dissimulation se portera alors sur les communications entre le rootkit et l'attaquant pour protéger et maintenir l'accès frauduleux.

==== Maintien de l'accès ====

Un ''{{lang|en|rootkit}}'' doit pouvoir être manipulé à distance par un attaquant. Celui-ci cherche donc souvent à maintenir un [[Shell (informatique)|shell]] (ou « interpréteur de commandes ») disponible idéalement à n'importe quel moment (ou au moins durant l'installation du rootkit), en remplaçant des commandes comme [[ping (logiciel)|ping]] ou [[xterm]]. Généralement, l'attaquant installe plusieurs de ces [[porte dérobée|portes dérobées]] au cas où l'une viendrait à être découverte et supprimée<ref group="C" name="p4-7" >Chuvakin (2003), {{p.}}4-7 : ''Maintain Access''</ref>.

L'accès distant au kit peut se faire par l'intermédiaire d'une connexion [[Transmission Control Protocol|TCP]], comme [[telnet]] ou [[ssh]] (qui peut être renversée, c'est-à-dire que c'est la machine infectée qui va chercher à rentrer en contact avec l'attaquant), [[User Datagram Protocol|UDP]] ou [[ICMP]]. Il existe aussi des méthodes plus complexes mais plus discrètes : [[port knocking]], faux paquet TCP contenant une commande cachée, [[spoofing|se faire passer]] pour une autre machine<ref group="C" name="p4-7" />, [[canal caché|canaux cachés]], etc. Au besoin, les scripts de démarrage seront modifiés pour que les services nécessaires au rootkit soient disponibles après chaque redémarrage de la machine<ref group="C" name="p14" />.

Pour que l'accès à la machine ne soit pas détourné par un autre attaquant, celui-ci peut corriger les failles du système infecté : celles qui lui ont permis de rentrer, voire l'ensemble des failles connues.

==== Mise en place de la charge utile ====

[[Fichier:Botnet.svg|thumb|right|Un [[botnet]] permet d'avoir un accès sur des centaines de machines.]]
La [[charge utile]] est la partie active du rootkit (et de tout [[Logiciel malveillant|programme malveillant]] en général), dont le rôle est d'accomplir la (ou les) tâche(s) assignée(s).

Cette charge utile permet d'avoir accès aux ressources de la machine infectée<ref group="L" name="p14" />, et notamment le [[processeur]], pour décrypter des mots de passe, pour effectuer des [[calcul distribué|calculs distribués]] à des fins malveillantes ou pour mettre en œuvre (ou détourner l'usage légitime) des applications comme un [[serveur de messagerie électronique|serveur de messagerie]] afin d'envoyer des mails ([[pourriel]] ou ''spam'') en quantité. Les ressources réseaux intéressent également les attaquants, la machine pouvant alors servir de base pour d'autres attaques ([[DDoS]]<ref>{{Lien web |url=http://www.zdnet.fr/blogs/cybervigilance/le-deni-de-service-politique-se-banalise-en-asie-du-sud-est-39755908.htm |titre= Le déni de service politique se banalise en Asie du Sud-Est |date=5 novembre 2010 |éditeur=ZDNet.fr}}</ref>, [[Exploit (informatique)|exploits]]) ou pour inspecter, [[Packet sniffer|sniffer]] l'activité réseau.

Le remplacement du procédé de connexion (comme <code>/bin/login</code> sous Linux) peut aussi fournir soit un accès de type [[porte dérobée]] {{Infra|Maintient de l'accès}}, soit un moyen de récupérer les informations d'authentification des utilisateurs de la machine. La compromission de pilotes de périphériques permet également d'installer des [[Enregistreur de frappe|enregistreurs de frappe]] ou ''{{lang|en|keyloggers}}'' (entre autres), afin de récupérer, en complément de l'activité réseau, des traces et des informations personnelles ou confidentielles, comme le seraient des données bancaires ou de connexion.

La machine infectée peut aussi devenir le point de départ pour d'autres attaques, sur internet, ou sur l'[[intranet]], comme un [[Attaque par déni de service|déni de service]]<ref group="C" name="p7-8">Chuvakin (2003), {{p.}}7-8 : ''Attack Other Systems''</ref>. La prise de contrôle de la machine offre la possibilité de constituer un réseau de type [[botnet]] (la machine infectée devenant alors une [[machine zombie]], comme dans le cas du [[botnet Srizbi]]<ref>{{en}} {{Lien web |url=http://cyberinsecure.com/botnet-spams-60-billion-emails-a-day/ |titre=Botnet Spams 60 Billion Emails A Day |date=9 mai 2008 |éditeur=CyberInsecure.com}}</ref>), ou d'accéder à d'autres machines, par [[Attaque par rebond|rebond]].

=== Niveau de privilège ===

Bien que le terme ait souvent désigné des outils ayant la faculté d'obtenir un niveau de privilège de type administrateur ([[utilisateur root]]) sur les systèmes [[Unix]] et [[Linux]], un rootkit ne cherche pas obligatoirement à obtenir un tel accès sur une machine et ne nécessite pas non plus d'accès administrateur pour s'installer, fonctionner et se dissimuler<ref>{{en}} {{Lien web |url=http://technet.microsoft.com/en-us/sysinternals/bb897445.aspx |titre=RootkitRevealer |date={{Date||novembre|2006}} |auteur=B. Cogswell, M. Russinovich |éditeur=Microsoft (Windows Sysinternals)}}</ref>. Le programme malveillant « Haxdoor »<ref>{{en}} {{Lien web |url=http://www.f-secure.com/v-descs/haxdoor.shtml |titre=Haxdoor |éditeur=F-Secure}}</ref>, même s'il employait des techniques de type noyau<ref>{{en}} {{Lien web |url=http://www.f-secure.com/weblog/archives/archive-022006.html#00000821 |titre=Rootkit Pharming |éditeur = F-Secure |date={{Date|24|février|2006}}}}</ref> pour parfaire sa dissimulation, écoutait les communications sous Windows en mode utilisateur<ref>{{Lien web |url=http://www.cert-ist.com/fra/ressources/Publications_ArticlesBulletins/Environnement_Microsoft/rootkit_fev_2006/ |titre=Les rootkits et la fraude bancaire |année=2006 |éditeur=Cert-IST}}</ref> : en interceptant les API de haut niveau, il recueillait des données confidentielles avant leur chiffrement.

Cependant, l'[[Élévation des privilèges|élévation de privilège]] est souvent nécessaire pour que le camouflage soit efficace : le rootkit peut utiliser certains [[Exploit (informatique)|exploits]] afin de parfaire sa dissimulation en opérant à un niveau de privilège très élevé, pour atteindre des bibliothèques du système, des éléments du noyau, pour désactiver les défenses du système<ref group="L" name="tout" />, etc.

== Types ==

Un rootkit peut intervenir à un ou plusieurs niveaux du système parmi les cinq suivants : [[firmware|micrologiciel]], [[hyperviseur]], [[kernel|noyau]], [[Bibliothèque logicielle|bibliothèque]] ou [[Logiciel applicatif|applicatif]]<ref group="C" name="p10">Chuvakin (2003), {{p.}}10 : ''Types of Rootkits''</ref>.

=== Niveau micrologiciel/matériel ===

Il est possible d'installer des rootkits directement au niveau du [[micrologiciel]] (ou ''{{lang|en|firmware}}''). De nombreux produits proposent désormais des [[Mémoire flash|mémoires flash]] qui peuvent être utilisées pour injecter durablement du code<ref>{{en}} {{Lien web |url=http://www.phrack.org/issues.html?issue=66&id=7#article |titre=Persistent BIOS Infection |auteur=Anibal Sacco et Alfredo Ortega |année=2009 |mois=juin |éditeur=Phrack Magazine}}</ref> en détournant par exemple l'usage d'un module de persistance souvent implanté dans le [[Basic Input Output System|BIOS]] de certains systèmes.

Un outil légitime utilise cette technique : LoJack, d'Absolute Software<ref name="lojack" />, qui permet de suivre un ordinateur à l'insu de l'utilisateur pour retrouver un ordinateur portable en cas de vol. Ce code reste en place après un [[formatage]] du disque dur, voire après un [[Flashage de BIOS|flashage du BIOS]]<ref>{{en}} {{Lien web|url=http://www.tomshardware.com/news/bios-virus-rootkit-security-backdoor,7400.html |titre=New BIOS Virus Withstands HDD Wipes |date={{Date|27|mars|2009}} |éditeur=Tom's Hardware}}</ref> si le module de persistance est présent et actif. Tout périphérique disposant d'un tel type de mémoire est donc potentiellement vulnérable.

Une piste évoquée pour contrer ce genre de rootkit serait d'interdire l'écriture du BIOS, grâce à un [[Cavalier (électronique)|cavalier]] sur la [[carte mère]] ou par l'emploi d'un mot de passe, ou d'utiliser des [[Extensible Firmware Interface|EFI]] à la place du BIOS<ref>{{Lien web |url=http://www.presence-pc.com/actualite/virus-rootkit-BIOS-34221/ |titre=Ils ont inventé le virus de BIOS |année=2009 |mois=mars |éditeur=presence-pc.com}}</ref>, mais cette méthode reste à tester et à confirmer<ref>{{en}} {{Lien web |url=http://www.v3.co.uk/vnunet/news/2239320/bios-attack-renders-antivirus |titre=New Bios attack renders anti-virus useless |date={{Date|26|mars|2009}} |éditeur=v3.co.uk}}</ref>.

En novembre 2010, un chercheur français, Guillaume Delugré, publie une méthode pour remplacer le firmware d'une carte réseau très répandue sur le marché<ref>{{en}} {{Lien web|url=http://esec-lab.sogeti.com/dotclear/index.php?post/2010/11/21/Presentation-at-Hack.lu-:-Reversing-the-Broacom-NetExtreme-s-firmware |titre=Presentation at Hack.lu : Reversing the Broacom NetExtreme's firmware |date={{Date|21|novembre|2010}} |éditeur=Sogeti ESEC Lab |auteur=Guillaume Delugré}}</ref>. Le rootkit s'exécute ainsi directement sur la carte, et donc sans modifier l'OS. L'usage des canaux [[Accès direct à la mémoire|DMA]] permet alors de manipuler l'OS.

=== Niveau hyperviseur ===

Ce type de rootkit se comporte comme un [[hyperviseur]] natif, après s'être installé et avoir modifié la [[Amorce (informatique)|séquence de démarrage]], pour être lancé en tant qu'hyperviseur à l'initialisation de la machine infectée. Le système d'exploitation original devient alors un hôte (invité) du rootkit, lequel peut intercepter tout appel au matériel. Il devient quasiment impossible à détecter depuis le système original.

Une étude conjointe de chercheurs de l'université du Michigan et de Microsoft a démontré la possibilité d'un tel type de rootkit, qu'ils ont baptisé « ''{{lang|en|virtual-machine based rootkit}}'' » (VMBR)<ref>{{pdf}} {{en}} {{Lien web |url=http://www.eecs.umich.edu/virtual/papers/king06.pdf |titre=SubVirt: Implementing malware with virtual machines |auteur=Samuel T. King, Peter M. Chen, Yi-Min Wang, Chad Verbowski, Helen J. Wang, Jacob R. Lorch |année=2006 }}</ref>. Ils ont pu l'installer sur un système [[Windows XP]] et sur un système [[Linux]]. Les parades proposées sont la sécurisation du boot, le démarrage à partir d'un média vérifié et contrôlé (réseau, CD-ROM, clé USB, etc.) ou l'emploi d'un moniteur de [[machine virtuelle]] sécurisé.

[[Blue Pill]] est un autre exemple de rootkit utilisant cette technique. En mai 2010, Zhi Wang et Xuxian Jiang, deux chercheurs de l'[[Université de Caroline du Nord]], publient « HyperSafe »<ref>Zhi Wang, Xuxian Jiang, ''HyperSafe: A Lightweight Approach to Provide Lifetime Hypervisor Control-Flow Integrity'', 31{{e}} conférence ''IEEE Symposium on Security and Privacy'', Oakland, CA, mai 2010</ref>, un outil permettant de sécuriser [[BitVisor]] et [[Xen]] — mais portable sur les [[hyperviseur]]s de type 1 — contre entre autres ''Blue Pill''<ref>{{Lien web |url=http://www.networkworld.com/news/2010/050710-researchers-to-cure-blue-pill.html?source=nww_rss |titre=Researchers to cure Blue Pill virtualization attacks |auteur=Joab Jackson |date=7 mai 2010 |éditeur=IDG News Service |consulté le=11 mai 2010}}</ref> : le principe est d'empêcher l'injection et l'exécution arbitraire de code par overflow (''{{lang|en|non-bypassable memory lockdown}}'') et de protéger les [[Pointeur de fonction|pointeurs de fonction]] pour empêcher les attaques par hooking.

=== Niveau noyau ===

Certains rootkits s'implantent dans les couches du [[Noyau de système d'exploitation|noyau du système d'exploitation]] : soit dans le noyau lui-même, soit dans des objets exécutés avec un niveau de privilèges équivalent à celui du noyau.

Sous Linux, il s'agit souvent de [[Loadable Kernel Module|modules]] pouvant être chargés par le noyau, et sous Windows de [[Pilote informatique|pilotes]]. Avec un tel niveau de privilèges, la détection et l'éradication du rootkit n'est souvent possible que de manière externe au système en redémarrant depuis un système sain, installé sur CD, sur une clé USB ou par réseau.

Le type le plus courant, depuis 1997, de rootkit noyau s'attaque au [[Loadable Kernel Module|LKM]] des noyaux Unix. Le LKM a naturellement la possibilité de modifier certains [[appels système]] ; c'est ce qui rend le noyau modulaire. S'il est compromis par un kit, il peut remplacer la commande « ouvrir le fichier ''foo'' » – <code>open()</code> – par « ouvrir le fichier ''foo'' sauf s'il s'appelle ''rootkit'' », rendant les fichiers du rootkit invisibles pour l'utilisateur<ref group="C" name="p12-13" />. ''Adore'' est un de ceux-là : il remplace entre autres les appels à <code>[[fork (programmation)|fork()]]</code>, <code>open()</code> et <code>write()</code><ref>{{Article |langue=en |prénom1=Steve |nom1=Terrell |titre=Discovery, Eradication and Analysis of an attack on an open system: Welcome to the Jungle |périodique=SANS Institute (InfoSec Reading Room) |jour=17 |mois=juin |année=2003 |pages=25 |format=pdf |url texte=http://www.sans.org/reading_room/whitepapers/casestudies/discovery-eradication-analysis-attack-open-system-jungle_1176 |consulté le=27 avril 2010}}</ref>.

''A contrario'', ''SucKIT'', publié dans l'article <code>0x07</code> du Phrack n°58<ref>{{Article |langue=en |nom1=sd |nom2=devik |titre=Linux on-the-fly kernel patching without LKM |périodique=Phrack |lien périodique=Phrack |jour=28 |mois=décembre |année=2001 |numéro=58 |url texte=http://www.phrack.org/issues.html?issue=58&id=7&mode=txt |consulté le=27 avril 2010}}</ref>, est un rootkit noyau ne nécessitant pas de LKM<ref>{{Lien web |url=http://www.la-samhna.de/library/rootkits/list.html |titre=Linux Kernel Rootkits |auteur=Rainer Wichmann |année=2006 |consulté le=27 avril 2010}}</ref> (il passe par le périphérique <code>/dev/kmem</code>).

Les rootkits noyau sont dangereux à la fois parce qu'ils ont acquis des privilèges élevés (il est alors plus facile de leurrer tout logiciel de protection), mais aussi par les instabilités qu'ils peuvent causer sur le système infecté comme cela a été le cas lors de la correction de la vulnérabilité MS10-015<ref>{{Lien web |url= http://support.microsoft.com/kb/977165 |titre = Bulletin de sécurité MS10-015 |année=2010 |mois=février |éditeur=Microsoft}}</ref>, où des [[Écran bleu de la mort|écrans bleus]] sont apparus en raison d'un conflit entre le fonctionnement du rootkit ''Alureon'' et la correction de cette vulnérabilité<ref>{{Lien web |url=http://www.pcinpact.com/actu/news/55489-windows-bsod-redemarrage-rootkit-alureon-ms10015.htm |titre=Microsoft : le rootkit Alureon responsable de BSOD sur XP |année=2010 |mois=février |éditeur=pcinpact.com}}</ref>.

=== Niveau bibliothèque ===

À ce niveau, le rootkit détourne l'utilisation de bibliothèques légitimes du système d'exploitation.

Plusieurs techniques peuvent être utilisées. On peut [[Patch (informatique)|patcher]] une bibliothèque, c'est-à-dire lui ajouter du code. On peut aussi détourner l'appel d'un objet – par [[Hook (informatique)|hooking]], {{Infra|Moyens de détection}} –, ce qui revient à appeler une « autre fonction » puis à revenir à la fonction initiale, pour que le détournement soit transparent du point de vue fonctionnel. Enfin, on peut remplacer des [[appels système]] par du code malveillant.

Ce type de rootkit est assez fréquent, mais il est aussi le plus facile à contrer, notamment par un contrôle d'intégrité des fichiers essentiels, en surveillant leur [[Somme de contrôle|empreinte]] grâce à une [[Fonction de hash|fonction de hachage]] ; par une détection de signature du programme malveillant ; ou par exemple, par un examen des ''{{lang|en|hooks}}'' au moyen d'outils comme [[unhide]] sous Linux ou [[HijackThis]] sous Windows.

Un exemple connu de ce type de kit est ''T0rn 8'' : il charge sa propre bibliothèque (<code>libproc.a</code>) qui va remplacer la bibliothèque standard faisant l'intermédiaire entre les informations système – <code>/proc</code> – et l'espace utilisateur. Ainsi, le kit peut filtrer les informations qui transitent et retirer tous ce qui pourrait révéler la présence du kit, sans toucher aux exécutables systèmes (ps, ls, etc.)<ref group="C" name="p13-14" />

=== Niveau applicatif ===

Un rootkit applicatif implante des programmes malveillants de type [[Cheval de Troie (informatique)|cheval de Troie]], au niveau utilisateur. Ces programmes prennent la place de programmes légitimes – usurpation d'identité – ou en modifient le comportement, afin de prendre le contrôle des ressources accessibles par ces programmes.

Par exemple, une application de traitement de texte peut être remplacée par une version malicieuse et donner accès aux fonctions permettant de lire et d'écrire un fichier dans une partie de l'arborescence. Plus grave, des applications comme [[ls (Unix)|ls]], [[ps (Unix)|ps]], [[grep]] peuvent être remplacées<ref group="C" name="p10-12">Chuvakin (2003), {{p.}}10-12 : ''Binary Rootkits''</ref>.

Cette méthode n'est pas efficace si ces programmes sont régulièrement recompilés à partir des sources<ref group="L" name="p4">Lacombe (2007), Évolution des rootkits, {{p.}}4</ref>.

== Exemples ==

=== Rootkits Sony ===

À deux reprises, Sony a été confronté à la présence masquée de rootkits dans ses produits : dans ses [[clé usb|clés usb]] [[biométrique]]s<ref>{{Lien web |url=http://www.silicon.fr/fr/silicon/news/2007/09/03/rootkit-de-sony-une-incroyable |titre=Rootkit sur clé USB: l'incroyable 'erreur' de Sony |date={{Date|3|septembre|2007}} |éditeur=silicon.fr}}</ref> et dans son composant de [[gestion numérique des droits]] (DRM)<ref>{{Lien web |url=http://www.generation-nt.com/un-rootkit-dans-les-drm-de-sony-actualite-9267.html |titre=Un rootkit dans les DRM de Sony |année=2005 |mois=novembre |jour=1 |éditeur=generation-nt.com (GNT Media)}}</ref>{{,}}<ref>{{Lien web |url=http://www.secuobs.com/news/11112005-sony-rootkit.shtml |titre=Sony intègre puis retire un rootkit de ses CD audio protégés |année=2005 |mois=novembre |jour=11 |éditeur=secuobs.com}}</ref>, nommé « XCP » (pour « ''{{lang|en|Extended Copy Protection}}'' »), présent sur 52 CD audio (dont certains de [[Céline Dion]] et de [[Sarah McLachlan]]). L'entreprise cherchait à réduire le nombre de copies illégales de ses disques en limitant le droit de copie et en traçant la circulation des CD par internet.

Le kit XCP, présent sur 4 millions de CD produits en 2005<ref name="nt-fournisseur">{{Lien web |url=http://www.generation-nt.com/sony-bmg-rootkit-cd-anti-piratage-actualite-43131.html |titre=Sony BMG poursuit son fournisseur de rootkits |auteur=Cédric B |date={{Date|13|juillet|2007}} |site=generation-nt.com |citation=Le japonais [Sony] a utilisé celle-ci sur environ 4 millions de disques en 2005. |consulté le=21 avril 2010}}</ref>, est parfois instable et possède lui-même des failles qui peuvent être exploitées, permettant notamment de tricher sous [[World of Warcraft]] ou de créer un virus l'utilisant<ref>{{Lien web |url=http://www.presence-pc.com/actualite/Sony-rootkit-12894/ |titre=Premier virus utilisant le rootkit Sony |auteur=David Civera |date=10 novembre 2005 |site=presence-pc.com |consulté le=20 avril 2010}}</ref>. En revanche, XCP peut être facilement déjoué en maquillant la deuxième piste du CD<ref name="gartner1811">{{pdf}} {{en}} {{Lien web |url=http://www.gartner.com/resources/136300/136331/sony_bmg_drm_a_publicrelatio_136331.pdf |titre=Sony BMG DRM a Public-Relations and Technology Failure |auteur=Martin Reynolds, Mike McGuire |date={{Date|18|novembre|2005}} |éditeur=[[Gartner]] |citation=''The user simply applies a fingernail-sized piece of opaque tape to the outer edge of the disc, rendering session 2 — which contains the self-loading DRM software — unreadable'' |consulté le=20 avril 2010}}</ref> : la piste n'étant plus lisible, le rootkit ne peut pas s'activer. De plus, il ne fonctionne que sur les systèmes d'exploitation de type Windows<ref>{{en}} {{Lien web |url=http://news.bbc.co.uk/2/hi/technology/4406178.stm |titre=The rootkit of all evil? |auteur=Bill Thompson |date=4 novembre 2005 |éditeur=[[BBC News]] |citation=''If you have got a Mac or a Linux box then you can play and even copy you disc happily ...'' |en ligne le=4 novembre 2005 |consulté le=23 avril 2010}}</ref>.

XCP se connecte régulièrement aux serveurs de Sony pour envoyer l'identifiant du disque audio que l'utilisateur écoute. Il empêche la lecture du CD par un autre logiciel que celui fourni par Sony, et limite le nombre de copie (gravure et [[Rip (informatique)|rip]]) du disque<ref name="bba2006" />. Une analyse du groupe [[Gartner]] montre que XCP se comporte comme un logiciel malveillant sur plusieurs points : téléchargements cachés, informations concernant son fonctionnement cachées dans la [[CLUF|licence d'utilisation]], absence d'utilitaire de désinstallation et envoi obligatoire d'un mail contenant des informations personnelles et sur le système pour en recevoir un, envoi de certaines informations à des serveurs de Sony sans information préalable à l'utilisateur<ref name="gartner0911">{{pdf}} {{en}} {{Lien web |url=http://www.gartner.com/resources/135800/135824/sonys_approach_to_content_pr_135824.pdf |titre=Sony's Approach to Content Protection Is Short-Sighted |auteur=Ray Wagner, Mike McGuire, Jay Heiser, Peter Firstbrook |date={{Date|9|novembre|2005}} |éditeur=[[Gartner]] |citation=''It [XCP] was deliberately designed to be difficult to remove'' |consulté le=20 avril 2010}}</ref>. [[Gartner]] met en avant le cas XCP pour montrer que ce type de DRM n'est pas à envisager par une entreprise car il est inefficace, illégale sous certains aspects et dommageable pour le client<ref name="gartner1811" />. Il apparaît aussi que XCP se base sur des logiciels libres sans en respecter la licence, c'est-à-dire en redistribuant le code source produit<ref name="bba2006" /> : il utilise les [[code source]] de [[DVD Jon]]<ref name="num0909">{{Lien web |url=http://www.numerama.com/magazine/13911-affaire-rootkit-de-sony-des-utilisateurs-obtiennent-un-dedommagement-financier.html |titre=Affaire rootkit de Sony : des utilisateurs obtiennent un dédommagement financier |auteur=Julien L |date=14 septembre 2009 |site=numerama.com |consulté le=30 avril 2010}}</ref>.

Au final, XCP était présent sur un nombre limité de CD et son impact sur la contrefaçon n'a pas été évalué. Ces affaires ont fait un tort important à Sony, qui a fini par abandonner ces logiciels, aussi bien pour sa respectabilité que financièrement. Dans plusieurs pays, Sony a été poursuivi en justice et obligé de reprendre les CD contenant un rootkit et de dédommager les clients<ref>{{Lien web |url=http://www.itespresso.fr/affaire-rootkit-sony-bmg-regle-son-conflit-avec-la-ftc-17715.html |titre=Affaire rootkit : Sony BMG règle son conflit avec la FTC |année=2007 |mois=février |éditeur=ITespresso.fr}}</ref>. En 2007, aux [[États-Unis]], Sony est condamné à rembourser jusqu'à {{unité|150|$}} par acheteur pour un total de 5,75 millions de dollars<ref name="nt-fournisseur" />. En 2009 en Allemagne, un travailleur indépendant a obtenu gain de cause en touchant {{unité|1200|€}} de dommages et intérêts car le kit avait fait perdre du temps et des données à son entreprise<ref name="num0909" />. Pour ses rootkits, Sony a été nommé aux [[Big Brother Awards]] 2006<ref name="bba2006">{{Lien web |url=http://bigbrotherawards.eu.org/SonyBMG.html |titre=Sony-BMG et son "rootkit" espion |année=2006 |site=bigbrotherawards.eu.org |consulté le=20 avril 2010}}</ref>.

=== Exploitation de la vulnérabilité de LPRng ===

Le [[CERTA]] (Centre d'Expertise Gouvernemental de Réponse et de Traitement des Attaques informatiques de l'État français) a publié, dans une note d'information, l'analyse d'une attaque ayant permis d'installer un rootkit (non identifié, mais dont les caractéristiques semblent correspondre au rootkit « Rk »<ref group="C" name="p22">Chuvakin (2003), {{p.}}22 : ''Rk: Hidden but Not Enough''</ref>), n'utilisant à l'origine qu'une seule faille, laquelle concernait le module d'impression LPRng présents dans certains systèmes Linux (faille répertoriée CERTA-2000-AVI-087<ref>{{Lien web |url=http://www.certa.ssi.gouv.fr/site/CERTA-2000-AVI-087/index.html |titre=Avis CERTA-2000-AVI-087 |date={{Date|13|décembre|2000}} |éditeur=CERTA}}</ref>). Cette faille, qui aurait pu être corrigée soit par la mise à jour du système, soit par le blocage d'un port spécifique grâce à un [[Pare-feu (informatique)|pare-feu]]<ref>{{Lien web |url=http://www.certa.ssi.gouv.fr/site/CERTA-2002-INF-003/|titre=Chronique d'un incident ordinaire|date={{Date|13|décembre|2000}}|éditeur=CERTA}}</ref>, permettait l'exécution à distance de [[code arbitraire]].

Cette attaque a été menée en moins de deux minutes. L'attaquant a identifié la vulnérabilité, puis envoyé une requête spécialement formée sur le [[Port (logiciel)|port]] 515 (qui était le port exposé de cette vulnérabilité) pour permettre l'exécution d'un code arbitraire à distance. Ce code, nommé « SEClpd », a permis d'ouvrir un port en écoute (tcp/3879) sur lequel le pirate est venu se connecter pour déposer une archive (nommée <code>rk.tgz</code>, qui contenait un rootkit) avant de la décompresser et de lancer le script d'installation.

Ce script a fermé certains services, installé des [[Cheval de Troie (informatique)|chevaux de Troie]], caché des processus, envoyé un fichier contenant les mots de passe du système par mail, et il a même été jusqu'à corriger la faille qui a été exploitée, afin qu'un autre pirate ne vienne pas prendre le contrôle de la machine.

=== Back Orifice ===
{{Article détaillé|Back Orifice}}
''Back Orifice'' est un rootkit [[client-serveur]] développé à partir de 1998 par le [[Cult of the Dead Cow]], un groupe de hackers. Il permet de prendre le contrôle des ordinateurs utilisant Windows 95/98, puis NT<ref name="bellamy">{{Lien web |url=http://securinet.free.fr/annexe/bo/backorifice.html |titre=Tout ce que vous avez voulu savoir sur Back Orifice |auteur=Jean-Claude Bellamy |année=1998 |consulté le=19 avril 2010}}</ref>. Le CDC revendique plusieurs centaines de milliers de téléchargements de la version de base « BO » et de la version améliorée « BO2K » en quelques semaines<ref name="pressrelease">{{en}} {{Lien web |url=http://www.bo2k.com/docs/bo2k_pressrelease.html |titre=BO2K Pressrelease |auteur=cDc |lien auteur=Cult of the Dead Cow |date=10 juillet 1999 |site=bo2k.com |consulté le=19 avril 2010}}</ref>. ''Back Orifice'' est certainement un des rootkit qui se sont le plus répandus, même si aujourd'hui ses cibles se sont raréfiées.

L'altération de la machine cible se fait en exécutant un programme qui va se charger à chaque démarrage de la machine. Cette altération est possible car les systèmes d'exploitation Windows 95/98 n'offrent pas de mécanismes de sécurité basiques tels que le chiffrement des mots de passe stockés (ils sont stockés en clair), ou le contrôle du [[droit d'exécution]] d'un programme (tout le monde peut exécuter n'importe quelle application, et même reconfigurer le système). Le client, utilisable sous Windows et Unix, est graphique et permet même à un non-initié de contrôler une machine infectée<ref name="bellamy" />.

La désinstallation du kit est simple : il suffit de supprimer l'exécutable résident et de retirer une clé de la base de registre. La plupart des antivirus le reconnaissent comme un virus.

== Prévention ==

=== Moyens de détection ===

La mise en œuvre d'une détection peut, selon le type de rootkit, demander un examen du système ou d'un périphérique suspect en mode « inactif » (démarrage à partir d'un système de secours ou d'un système réputé sain). Plusieurs méthodes existent.

La ''recherche d'objets cachés'' (tels que des processus informatiques, des clés de registre, des fichiers, etc.) est essentielle. Des outils comme [[unhide]] sous Linux peuvent révéler les processus cachés. Sous Windows, des outils comme [[RootkitRevealer]] recherchent les fichiers cachés en listant les fichiers via l'API normale de Windows puis en comparant cette liste à une lecture physique du disque ; les différences entre les deux sont alors repérées comme suspectes, à l'exception des fichiers légitimes connus de Windows, tels que les fichiers de métadonnées de NTFS comme <code>$MFT</code> ou <code>$Secure</code><ref>{{Lien web |url=http://www.cert-ist.com/fra/ressources/Publications_ArticlesBulletins/Environnement_Microsoft/RootkitRevealerlariposteauxrootkitsWindows/ |titre=RootkitRevealer : la riposte aux rootkits Windows |éditeur=Cert-IST}}</ref>.

[[Fichier:Controle d intégrité.png|thumb|right|Le calcul régulier des [[somme de contrôle|empreintes]] de fichiers sensibles permet de détecter une modification inattendue.]]

Le contrôle de l'intégrité des fichiers consiste à calculer, pour chaque fichier sensible (bibliothèque, commande système, etc.), une [[somme de contrôle|empreinte]]<ref name="rutkowska">{{ppt}} {{en}} {{Lien web |url=http://invisiblethings.org/papers/rutkowska_bheurope2006.ppt|titre=Rootkits vs. Stealth by Design Malware|auteur=J. Rutkowska |date={{Date|2|mars|2006}} |éditeur=invisiblethings.org}}</ref>. Toute modification inattendue de cette empreinte indique une modification du fichier, et donc une contamination potentielle. Cependant, tout système subit des modifications légitimes lors des [[mise à jour|mises à jour]] ; idéalement, l'outil de contrôle a la possibilité d'accéder à une base de référence de ces sommes de contrôles, selon la version du système utilisée ([[rkhunter]] par exemple).

La ''détection de signatures spécifiques'' est le procédé classique d'analyse de signature, comme cela se fait pour les virus : on cherche à retrouver dans le système la trace d'une infection, soit directement (signature des objets du rootkit), soit par le vecteur d'infection (virus utilisé par le rootkit)<ref name="rutkowska" />.

L’analyse des appels systèmes, des [[Interrupt Descriptor Table|tables d'interruption]]<ref>{{en}} {{Lien web |url=http://swatrant.blogspot.com/2006/02/rootkit-detection-removal-and.html |titre=Rootkit detection, removal and prevention |date={{Date|17|février|2006}}}}</ref>{{,}}<ref name="CWprotect">{{en}} {{Lien web |url=http://www.computerweekly.com/Articles/2007/06/20/224064/Rootkit-and-malware-detection-and-removal-guide.htm |titre=Rootkit and malware detection and removal guide |date={{Date|3|juillet|2007}} |éditeur=ComputerWeekly}}</ref>, et de manière générale, des tables de travail utilisées par le système, au moyen d'outils spécifiques (des logiciels anti-espion comme [[HijackThis]]), permet de voir si ces appels ont été détournés ou non, par exemple en comparant ce qui est chargé en mémoire avec les données brutes de bas niveau (ce qui est écrit sur le disque).

[[Fichier:Iat hooking.png|thumb|left|Le [[Hook (informatique)|hooking]] consiste à détourner un appel de fonction légitime par un autre qui contient du code malveillant.]]

On peut aussi s'intéresser à la charge du système. Du point de vue du processeur et de l'activité applicative, une surveillance continue peut mettre en évidence une surcharge, à partir du moment de la contamination. Il s'agit essentiellement d'une analyse de la charge habituelle de la machine, comme le nombre de mails sortants ou l'occupation du processeur. Toute modification (en surcharge) sans cause apparente est suspecte, mais elle nécessite une analyse complémentaire pour écarter les causes légitimes (mise à jour du système, installation de logiciels, etc.)

De la même manière, l’analyse des flux réseau<ref name="techtarget1">{{en}} {{Lien web |url=http://searchenterprisedesktop.techtarget.com/generic/0,295582,sid192_gci1114650,00.html |titre=Rooting out a rootkit: Stage one -- Diagnosis |date={{Date|10|août|2005}} |éditeur=techtarget.com}}</ref> permet de détecter une surcharge anormale. Mais il convient également de surveiller une utilisation de [[Port (logiciel)|ports logiciels]] inhabituels grâce aux traces issues d'un pare-feu ou grâce à un outil spécialisé. Il est également possible de faire une recherche des ports ouverts et cachés, en comparant ce que connaît le système avec ce qui est effectivement ouvert, grâce à des outils d'investigation comme [[unhide|unhide-tcp]]. Toute différence peut être considérée comme anormale. Il existe cependant des moyens de dissimulation réseau, comme de la [[stéganographie]] ou l'utilisation de [[Canal caché|canaux cachés]], qui rend la détection directe impossible, et nécessite une analyse statistique qui n'est pas forcément déterminante<ref name="rutkowska2">{{ppt}} {{en}} {{Lien web |url=http://invisiblethings.org/papers/towards_verifiable_systems.ppt |titre=Fighting Stealth Malware – Towards Verifiable OSes |auteur=J. Rutkowska |date={{Date|28|décembre|2008}} |éditeur=invisiblethings.org}}</ref>.

L’analyse automatisée des logs système<ref name="sans">{{en}} {{Lien web |url=http://www.sans.org/reading_room/whitepapers/linux/linux_rootkits_for_beginners_from_prevention_to_removal_901 |titre=Linux RootKits For Beginners - From Prevention to Removal |date={{Date|23|janvier|2006}} |page=5 et suivantes |éditeur=SANS Institute}}</ref> s'appuie sur le principe de corrélation, avec des outils de type [[HIDS]] qui disposent de règles paramétrables<ref>{{pdf}} {{en}} {{Lien web |url=http://www.ossec.net/ossec-docs/auscert-2007-dcid.pdf |titre=Log Analysis using OSSEC |page=13 et suivantes |auteur=D. Cid |année=2007 |éditeur=ossec.net}}</ref> pour repérer les événements anormaux et mettre en relation des événements systèmes distincts, sans rapport apparent ou épars dans le temps.

Le site du [[Computer Emergency Response Team|Cert]]-IST propose régulièrement des informations sur les rootkits et les logiciels malicieux en général<ref>{{Lien web |url=http://www.cert-ist.com |titre=Le CERT dédié à la communauté Industrie, Services et Tertiaire française |site=cert-ist.com |consulté le=4 mai 2010}}</ref>.

=== Moyens de protection et de prévention ===
Les moyens de détection peuvent également servir à la prévention, même si celle-ci sera toujours postérieure à la contamination. D'autres mesures en amont peuvent rendre difficile l'installation d'un rootkit<ref>{{en}} {{Lien web |url=http://www.us-cert.gov/cas/tips/ST06-001.html |titre=Understanding Hidden Threats: Rootkits and Botnets |éditeur=US-CERT |année=2006}}</ref>.

La correction des failles par mise à jour du système d'exploitation permet de réduire la surface d'exposition du système en limitant le temps pendant lequel une faille est présente sur le système<ref name="techtarget4">{{en}} {{Lien web |url= http://searchenterprisedesktop.techtarget.com/generic/0,295582,sid192_gci1114762,00.html |titre=Rooting out a rootkit: Stage four -- Preventative measures |date={{Date|10|août|2005}} |éditeur=techtarget.com}}</ref> et dans les applications<ref name="sans" />, afin de prévenir les [[Exploit (informatique)|exploits]] pouvant être utilisés pour la contamination.

L’utilisation d'un [[Pare-feu (informatique)|pare-feu]], qui fait partie des bonnes pratiques dans le domaine de la sécurité informatique, se révèle efficace dans le cas des rootkits<ref name="CWprotect" />{{,}}<ref name="sans" />{{,}}<ref name="techtarget4" /> car cela empêche les communications inattendues (téléchargements de logiciel, dialogue avec un centre de contrôle et de commande d'un [[botnet]], etc.) dont ont besoin les rootkits.

Il est possible de désactiver le système de chargement de modules en rendant le noyau statique, ce qui protège contre les rootkits qui s'installent en chargeant un module ; certains rootkits arrivent cependant à contourner cela en reconnaissant l'empreinte du module directement dans la mémoire<ref group="C" name="p12-13">Chuvakin (2003), {{p.}}12-13 : ''Kernel Rootkits''</ref>.

De même, pour renforcer la robustesse des bibliothèques et empêcher le hooking, il est possible de compiler statiquement les bibliothèques<ref group="C" name="p13-14">Chuvakin (2003), {{p.}}13-14 : ''Library Kits''</ref>.

[[Fichier:Complexité mot de passe.png|thumb|right|La complexité d'un mot de passe est proportionnelle à sa taille et au nombre de caractères différents qu'il utilise. Un mot de passe complexe sera plus long à deviner dans une [[Recherche par force brute|attaque par force brute]].]]

Des [[Système de prévention d'intrusion|systèmes de prévention d'intrusion]]<ref name="sans" />, sous forme de logiciel ou de matériel, répondent dès qu'une intrusion est détectée, en bloquant des ports ou en interdisant la communication avec une source ([[adresse IP]]) douteuse, ou toute autre action appropriée. La détection sera d'autant meilleure que l'outil utilisé sera externe au système examiné, puisque certains rootkits peuvent atteindre des parties de très bas niveau dans le système, jusqu'au [[Basic Input Output System|BIOS]]. Un des avantages de ces outils est l'automatisation des tâches de surveillance<ref name="rutkowska" />.

Des outils spécialisés de contrôle d'intégrité des fichiers peuvent produire des alertes lors de modifications inattendues. Cependant, ce contrôle à lui seul est insuffisant si d'autres mesures préventives ne sont pas mises en œuvre, si aucune réponse du système n'est déclenchée ou si ces différences ne sont pas analysées.

Le renforcement de la [[robustesse des mots de passe]] est une autre des bonnes pratiques de sécurité informatique qui élimine une des sources principales de contamination. Des éléments d'[[authentification]] triviaux sont des portes ouvertes pour tout type d'attaque informatique.

Le démarrage du système à partir d'une image saine, contrôlée et réputée valide du système d'exploitation, via un support fixe (comme un [[LiveCD]], une clé USB) ou par réseau, permet de s'assurer que les éléments logiciels principaux du système ne sont pas compromis, puisque à chaque redémarrage de la machine concernée, une version valide de ces objets est chargée. Un système corrompu serait donc remis en état au redémarrage (sauf dans le cas de rootkit ayant infecté un plus bas niveau, comme le BIOS).

Les moyens de protection habituels sont également valables contre les rootkits : {{citation étrangère |lang=en |Do everything so that attacker doesn’t get into your system}}<ref name="rutkowska2" />. [[Durcissement (informatique)|Durcissement du système]]<ref name="CWprotect" />, filtrages applicatifs (type [[modsecurity]]), utilisation de [[Logiciel antivirus|programmes antivirus]]<ref name="CWprotect" />{{,}}<ref name="techtarget4" /> pour minimiser la surface d'attaque et surveiller en permanence les anomalies et tentatives de contamination, sont bien sûr à mettre en œuvre pour éviter la contamination du système et l'exposition aux [[Exploit (informatique)|exploits]].

=== Outils et logiciels de détection ===
À part quelques cas particuliers, l'industrie de la sécurité informatique a tardé à prendre en compte les rootkits, les virus puis les chevaux de Troie accaparant l'attention des éditeurs. Il existe cependant quelques logiciels de détection et de prévention spécifiques à Windows, tels que Sophos Anti-Rootkit ou AVG Anti-Rootkit. Sous Linux, on peut citer [[rkhunter]] et [[chkrootkit]] ; plusieurs projets open-source existent sur [[Freshmeat]] et [[Sourceforge.net]].

Aujourd'hui, il reste difficile de trouver des outils spécifiques de lutte contre les rootkits, mais leur détection et leur prévention sont de plus en plus intégrées dans les [[Système de prévention d'intrusion|systèmes de prévention d'intrusion]] et même dans les [[Logiciel antivirus|antivirus classiques]], lesquels sont de plus en plus obligés de se transformer en suites de sécurité pour faire face à la diversité des menaces ; ils proposent en effet de plus en plus souvent des protections contre les rootkits. C'est le cas d'[[Avast]]<ref>{{Lien web
| url         = http://www.avast.com/free-antivirus-download
| titre       = Download avast! Free Antivirus 6
| site        = avast.com
| consulté le = {{date|9|mars|2011}} }}</ref>
, [[AVG Anti-Virus|AVG 8.0]]<ref>{{en}} {{Lien web
| url         = http://www.avg.com/ww-en/faq.num-2354#num-2354
| titre       = FAQ : How to deal with rootkits?
| site        = avg.com
| consulté le = {{date|9|mars|2011}} }}</ref>
ou [[Microsoft Security Essentials]]<ref>{{en}} {{Lien web
| url         = http://news.cnet.com/8301-1009_3-10366232-83.html
| titre       = Security Essentials fares well in AV-Test trial
| site        = cnet.com
| consulté le = {{date|9|mars|2011}} }}</ref>.

== Bibliographie ==
{{légende plume}}
* {{ouvrage |prénom1=Greg |nom1=Hoglund |prénom2=James |nom2=Butler |traducteur=Freenet Sofor ltd. |titre=Rootkits |sous-titre=infiltrations du noyau Windows |titre original=Rootkits: Subverting the Windows |lieu=Paris |éditeur=Campus Press |année=2006 |année première édition=2005 |pages totales=338 |isbn=9782744020766 |oclc=145848531}}
* {{ouvrage |langue=en |prénom1=Larry |nom1=Stevenson |prénom2=Nancy |nom2=Altholz |titre=Rootkits for dummies |collection=For dummies |éditeur=Wiley Pub. |lieu=Indianapolis, Ind |année=2007 |pages totales=380 |isbn=9780471917106 |oclc=85824660 |lire en ligne=http://books.google.com/books?id=MTcep7V6heUC |consulté le=19 avril 2010}}
* {{ouvrage |langue=en |prénom1=Ric |nom1=Vieler |titre=Professional rootkits |collection=Wrox professional guides |éditeur=Wiley/Wrox |lieu=Indianapolis, IN |année=2007 |pages totales=334 |isbn=9780470101544 |oclc=77116927 |présentation en ligne=http://books.google.com/books?id=OSaVF_jzsJgC}}
* {{ouvrage |langue=en |prénom1=Bill |nom1=Blunden |titre=The rootkit arsenal |sous-titre=escape and evasion in the dark corners of the system |éditeur=Wordware Pub. |lieu=Plano, Tex |année=2009 |mois=juin |pages totales=908 |isbn=9781598220612 |oclc=297145864}}
* {{ouvrage |prénom1=Joseph |nom1=Kong |titre=Rootkits BSD - Mieux les comprendre pour mieux s'en protéger |collection=Sécurité Informatique |éditeur=CampusPress |lien éditeur=CampusPress |jour=14 |mois=novembre |année=2007 |pages totales=148 |isbn=978-2744022203}}
* {{article |langue=en |id=Chuvakin |prénom1=Anton |nom1=Chuvakin |lien auteur1=:en:Anton Chuvakin |titre=An Overview of Unix Rootkits |périodique=iALERT White Paper |éditeur=iDefense Labs |lieu=Chantilly, VA |mois=février |année=2003 |pages=27 |format=pdf |url texte=http://www.thehackademy.net/madchat/vxdevl/avtech/An%20Overview%20of%20Unix%20Rootkits.pdf |consulté le=30 mars 2010}} {{plume}}
* {{pdf}} {{Lien web |id=Lacombe |url=http://www.security-labs.org/fred/docs/sstic07-rk-article.pdf |titre=De l’invisibilité des rootkits : application sous Linux |auteur=E. Lacombe, F. Raynal, V. Nicomette |éditeur=CNRS-LAAS/Sogeti ESEC |année=2007 |mois=juin |consulté le=24 avril 2010}} {{plume}}

== Notes et références ==
* Source {{harvsp |id=Chuvakin |texte=''Chuvakin''}} :
{{Références |colonnes=2 |groupe=C}}
* Source {{harvsp |id=Lacombe |texte=''Lacombe''}} :
{{Références |colonnes=2 |groupe=L}}
* Autres sources
{{Références |colonnes=2}}

== Voir aussi ==
=== Articles connexes ===
* [[Vulnérabilité (informatique)|Vulnérabilité]], [[Porte dérobée]]
* [[Packet sniffer]]
* [[Liste de logiciels de sécurité informatique]]

=== Liens externes ===
* [http://forum.malekal.com/danger-fonctionnement-des-rootkits-t3500.html Le danger et fonctionnement des rootkits ]
* {{en}} [http://www.antirootkit.com/ antirootkit.com, site (ancien) listant de nombreux outils]
* [http://www.youtube.com/watch?v=b-cjhegPFVU Vidéo sur le rootkit Trojan.Alureon/Trojan.TDSS]

{{Palette Logiciel malveillant}}
{{Portail sécurité informatique}}
{{Bon article|vote=BA|oldid=63190334|date=15 mars 2011}}

[[Catégorie:Rootkit|*]]
[[Catégorie:Sécurité du réseau informatique]]
[[Catégorie:Sécurité du système d'exploitation]]

[[bg:Руткит]]
[[ca:Rootkit]]
[[cs:Rootkit]]
[[de:Rootkit]]
[[el:Rootkit]]
[[en:Rootkit]]
[[eo:Ĉefuzula ilaro]]
[[es:Rootkit]]
[[fa:روت‌کیت]]
[[fi:Rootkit]]
[[ga:Trealamh fréamhrochtana]]
[[gl:Rootkit]]
[[he:Rootkit]]
[[hu:Rootkit]]
[[id:Rootkit]]
[[it:Rootkit]]
[[ja:ルートキット]]
[[kn:ರೂಟ್‌ಕಿಟ್]]
[[ko:루트킷]]
[[nl:Rootkit]]
[[no:Rootkit]]
[[pl:Rootkit]]
[[pt:Rootkit]]
[[ru:Руткит]]
[[sv:Rootkit]]
[[te:రూట్‌కిట్]]
[[th:รูตคิต]]
[[vi:Rootkit]]
[[zh:Rootkit]]