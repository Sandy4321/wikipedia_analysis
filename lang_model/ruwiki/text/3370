'''Алгори́тм Евкли́да''' — эффективный [[алгоритм]] для нахождения ''[[Наибольший общий делитель|наибольшего общего делителя]]'' двух [[целое число|целых чисел]] (или ''общей [[Мера физической величины|меры]]'' двух [[Отрезок|отрезков]]). Алгоритм назван в честь [[Греция|греческого]] [[математик]]а [[Евклид]]а, который впервые описал его в VII{{sfn|Мордухай-Болтовской|1949|страницы = 11—13}} и X{{sfn|Мордухай-Болтовской|1949|страницы = 103—105}} книгах «[[Начала Евклида|Начал]]». В самом простом случае алгоритм Евклида применяется к паре положительных целых чисел и формирует новую пару, которая состоит из меньшего числа и [[Вычитание|разницы]] между большим и меньшим числом. Процесс повторяется, пока числа не станут равными. Найденное число и есть наибольший общий делитель исходной пары.

Первое описание алгоритма находится в «[[Начала (Евклид)|Началах]]» Евклида (около 300 лет до н. э.), что делает его одним из старейших численных алгоритмов, используемых в наше время{{sfn|Кнут|2001|страницы = 378}}. Оригинальный алгоритм был предложен только для натуральных чисел и геометрических длин (вещественных чисел). Однако в XIX веке он был обобщён на другие типы чисел, такие как [[Гауссовы целые числа|целые числа Гаусса]] и [[Многочлен|полиномы от одной переменной]]. Это привело к появлению в современной [[Общая алгебра|общей алгебре]] такого понятия, как [[евклидово кольцо]]. Позже алгоритм Евклида также был обобщён на другие математические структуры, такие как [[Узел (математика)|узлы]] и [[Многочлен|многомерные полиномы]].

Для данного алгоритма существует множество теоретических и практических применений. В частности, он является основой для [[Криптосистема с открытым ключом|криптографического алгоритма с открытым ключом]] [[RSA]]{{sfn|Menezes|1996|страницы = 286}}, широко распространённого в [[Электронная коммерция|электронной коммерции]]. Также алгоритм используется при решении линейных [[Диофантово уравнение|диофантовых уравнений]]{{sfn|Курант|2001|страницы = 74—76}}, при построении [[Непрерывная дробь|непрерывных дробей]]{{sfn|Виноградов|1952|страницы = 14—18}}, в [[Ряд Штурма|методе Штурма]]{{sfn|Энгелер|1987|страницы = 24—31}}. Алгоритм Евклида является основным инструментом для доказательства теорем в современной [[Теория чисел|теории чисел]], например таких как [[теорема Лагранжа о сумме четырёх квадратов]]{{sfn|Тихомиров|2003|страницы = 11—14}} и [[основная теорема арифметики]]{{sfn|Калужин|1969|страницы = 6—14}}.

== История ==

Древнегреческие математики называли этот алгоритм {{lang-grc2|ἀνθυφαίρεσις}} или {{lang-grc2|ἀνταναίρεσις}} — «взаимное вычитание». Этот алгоритм не был открыт [[Евклид]]ом, так как упоминание о нём имеется уже в ''Топике'' [[Аристотель|Аристотеля]]{{sfn|Кнут|2001|страницы = 378}}. В [[Начала Евклида|«Началах» Евклида]] он описан дважды — в VII книге для нахождения наибольшего общего делителя двух натуральных чисел{{sfn|Мордухай-Болтовской|1949|страницы = 11—13}} и в X книге для нахождения наибольшей общей меры двух однородных величин{{sfn|Мордухай-Болтовской|1949|страницы = 103—105}}. В обоих случаях дано геометрическое описание алгоритма, для нахождения «общей меры» двух отрезков.

Историками математики было выдвинуто предположение, что именно с помощью алгоритма Евклида (процедуры последовательного взаимного вычитания) в древнегреческой математике впервые было открыто существование [[Несоизмеримые величины|несоизмеримых величин]] (стороны и диагонали квадрата, или стороны и диагонали правильного пятиугольника){{sfn|Цейтен|1932|страницы = 112-114}}. Впрочем, это предположение не имеет достаточных документальных подтверждений. Алгоритм для поиска наибольшего общего делителя двух натуральных чисел описан также в I книге древнекитайского трактата ''[[Математика в девяти книгах]]''.

== Описание ==

=== Алгоритм Евклида для целых чисел ===

Пусть <math>a</math> и <math>b</math> — целые числа, не равные одновременно нулю, и последовательность чисел
: <math> a > b > r_1 > r_2 > r_3 > r_4 > \cdots > r_n</math>
определена тем, что каждое <math>r_k</math> — это остаток от деления предпредыдущего числа на предыдущее, а предпоследнее делится на последнее нацело, то есть:
: <math>a = bq_0 + r_1,</math>
: <math>b = r_1q_1 + r_2,</math>
: <math>r_1 = r_2q_2 + r_3,</math>
: <math>\cdots</math>
: <math>r_{k-2} = r_{k-1} q_{k-1} + r_k,</math>
: <math>\cdots</math>
: <math>r_{n-2} = r_{n-1}q_{n-1}+ r_n,</math>
: <math>r_{n-1} = r_n q_n.</math>

Тогда НОД(''a'', ''b''), наибольший общий делитель ''a'' и ''b'', равен ''r''<sub>n</sub>, последнему ненулевому члену этой последовательности{{sfn|Виноградов|1952|страницы = 9-10}}.

'''Существование''' таких ''r''<sub>1</sub>, ''r''<sub>2</sub>, ..., ''r''<sub>n</sub>, то есть возможность деления с остатком ''m'' на ''n'' для любого целого ''m'' и целого ''n'' ≠ 0, доказывается [[Математическая индукция|индукцией]] по ''m''.

'''Корректность''' этого алгоритма вытекает из следующих двух утверждений{{sfn|Курант|2001|страницы = 67-70}}:
* Пусть ''a'' = ''b''⋅''q'' + ''r'', тогда НОД (a, b) = НОД (b, r).
{{Hider|
  title = Доказательство|
  hidden = 0 |
  title-style = text-align: left; height: auto; |
  content-style = text-align: left; |
  content =
# Пусть ''k'' — любой общий делитель чисел ''a'' и ''b'', не обязательно наибольший, тогда ''a'' = ''t''<sub>1</sub>⋅''k'' и ''b'' = ''t''<sub>2</sub>⋅''k'', где ''t''<sub>1</sub> и ''t''<sub>2</sub> — целые числа из определения.
# Тогда ''k'' является также общим делителем чисел ''b'' и ''r'', так как ''b'' делится на ''k'' по определению, а ''r'' = ''a'' - ''b''⋅''q'' = (''t''<sub>1</sub> - ''t''<sub>2</sub>⋅''q'')⋅''k'' (выражение в скобках есть целое число, следовательно, ''k'' делит ''r'' без остатка).
# Обратное также верно и доказывается аналогично пункту 2: любой делитель ''b'' и ''r'' так же является делителем ''a'' и ''b''.
# Следовательно, все общие делители пар чисел (''a'', ''b'') и (''b'', ''r'') совпадают. Другими словами, нет общего делителя у чисел (''a'', ''b''), который не был бы также делителем (''b'', ''r''), и наоборот.
# В частности, наибольший общий делитель остается тем же самым. Что и требовалось доказать.
}}
* НОД(''r'', 0) = ''r'' для любого ненулевого ''r'' (так как 0 делится на любое целое число, кроме нуля).

=== Геометрический алгоритм Евклида ===

Пусть даны два отрезка длины ''a'' и ''b''. Вычтем из большего отрезка меньший и заменим больший отрезок полученной разностью. Повторяем эту операцию, пока отрезки не станут равны. Если это произойдёт, то исходные отрезки [[Соизмеримые величины|соизмеримы]], и последний полученный отрезок есть их наибольшая общая мера. Если общей меры нет, то процесс бесконечен. В таком виде алгоритм описан Евклидом{{sfn|Мордухай-Болтовской|1949|страницы = 103—105}} и реализуется с помощью циркуля и линейки.

=== Пример ===

Для иллюстрации алгоритм Евклида будет использован, чтобы найти НОД ''a'' = 1071 и ''b'' = 462. Для начала от 1071 отнимем кратное значение 462, пока не получим разность меньше, чем 462. Мы должны дважды отнять 462, (''q''<sub>0</sub> = 2), оставаясь с остатком 147:
: 1071 = 2 × 462 + 147.

Затем от 462 отнимем кратное значение 147, пока не получим разность меньше, чем 147. Мы должны трижды отнять 147 (''q''<sub>1</sub> = 3), оставаясь с остатком 21:
: 462 = 3 × 147 + 21.

Затем от 147 отнимем кратное значение 21, пока не получим разность меньше, чем 21. Мы должны семь раз отнять 21 (''q''<sub>2</sub> = 7), оставаясь без остатка:
: 147 = 7 × 21 + 0.

Таким образом последовательность a > b > ''r''<sub>1</sub> > ''r''<sub>2</sub> > ''r''<sub>3</sub> > … > ''r''<sub>n</sub> в данном конкретном случае будет выглядеть так:
: 1071 > 462 > 147 > 21.


Так как последний остаток равен нулю, алгоритм заканчивается числом 21 и НОД(1071, 462) = 21.

В табличной форме шаги были следующие:

{| class="wikitable" id="basic_Euclidean_algorithm" style="margin-left:auto; margin-right:auto; text-align:center"
!Шаг ''k''!!Равенство!!Частное и остаток
|-
| 0 || 1071 = ''q''<sub>0</sub> 462 + ''r''<sub>0</sub> || ''q''<sub>0</sub> = 2 и ''r''<sub>0</sub> = 147
|-
| 1 || 462 = ''q''<sub>1</sub> 147 + ''r''<sub>1</sub> || ''q''<sub>1</sub> = 3 и ''r''<sub>1</sub> = 21
|-
| 2 || 147 = ''q''<sub>2</sub> 21 + ''r''<sub>2</sub> || ''q''<sub>2</sub> = 7 и ''r''<sub>2</sub> = 0; алгоритм заканчивается
|}

== Применения ==

=== Расширенный алгоритм Евклида и соотношение Безу ===
{{main|Соотношение Безу}}

Формулы для <math>r_i</math> могут быть переписаны следующим образом:

: <math>r_1 = a + b(-q_0)</math>
: <math>r_2= b - r_1q_1 = a(-q_1)+b(1+q_1q_0)</math>
: <math>\vdots</math>
: ''НОД'' <math> (a,b) = r_n = as + bt</math>
Здесь ''s'' и ''t'' целые. Это представление [[наибольший общий делитель|наибольшего общего делителя]] называется [[Соотношение Безу|соотношением Безу]], а числа ''s'' и ''t'' — [[Коэффициент Безу|коэффициентами Безу]]{{sfn|Хассе|1953|страницы = 29-30}}. Соотношение Безу является ключевым в доказательстве [[лемма Евклида|леммы Евклида]] и [[основная теорема арифметики|основной теоремы арифметики]].

=== Цепные дроби ===

Алгоритм Евклида достаточно тесно связан с [[цепная дробь|цепными дробями]]{{sfn|Виноградов|1952|страницы = 14—18}}. Отношение ''a''/''b'' допускает представление в виде цепной дроби:
:: <math>\frac ab=[q_0; q_1, q_2,\cdots,q_n]</math>.

При этом цепная дробь без последнего члена равна отношению коэффициентов Безу ''t''/''s'', взятому со знаком минус:
:: <math>[q_0; q_1, q_2,\cdots,q_{n-1}] = -\frac ts</math>.

Последовательность равенств, задающая алгоритм Евклида, может быть переписана в форме:

: <math>
\begin{align}
\frac{a}{b} &= q_0 + \frac{r_0}{b} \\
\frac{b}{r_0} &= q_1 + \frac{r_1}{r_0} \\
\frac{r_0}{r_1} &= q_2 + \frac{r_2}{r_1} \\
& {}\  \vdots \\
\frac{r_{k-2}}{r_{k-1}} &= q_k + \frac{r_k}{r_{k-1}} \\
& {}\  \vdots \\
\frac{r_{N-2}}{r_{N-1}} &= q_N
\end{align}
</math>

Последнее слагаемое в правой части равенства всегда равно обратному значению левой части следующего уравнения. Поэтому первые два уравнения могут быть объединены в форме:
: <math>\frac{a}{b} = q_0 + \cfrac{1}{q_1 + \cfrac{r_1}{r_0}} </math>

Третье равенство может быть использовано, чтобы заменить знаменатель выражения ''r''<sub>1</sub>/''r''<sub>0</sub>, получим:
: <math>\frac{a}{b} = q_0 + \cfrac{1}{q_1 + \cfrac{1}{q_2 + \cfrac{r_2}{r_1}}} </math>

Последнее отношение остатков ''r''<sub>''k''</sub>/''r''<sub>''k''−1</sub> всегда может быть заменено с использованием следующего равенства в последовательности, и так до последнего уравнения. Результатом является цепная дробь:
: <math>\frac{a}{b} = q_0 + \cfrac{1}{q_1 + \cfrac{1}{q_2 + \cfrac{1}{\ddots + \cfrac{1}{q_N}}}} = [ q_0; q_1, q_2, \ldots , q_N ] </math>

В приведённом [[#Пример|выше]] примере НОД(1071, 462) был посчитан и были найдены частные ''q''<sub>''k''</sub>, равные 2, 3 и 7 соответственно. Поэтому 1071/462 может быть записана как:
: <math>\frac{1071}{462} = 2 + \cfrac{1}{3 + \cfrac{1}{7}} = [2; 3, 7]</math>

=== Линейные диофантовы уравнения ===
[[Диофантово уравнение]] — это уравнение с [[Целые числа|целочисленными]] коэффициентами и с одним или несколькими переменными, причем ставится задача поиска лишь его целых корней. Такое уравнение может иметь бесконечно много решений, конечное число решений или не иметь их вовсе. Простейшее диофантово уравнение — линейное с двумя неизвестными:

<math>a \cdot x + b \cdot y = c,</math>

где ''a'', ''b'', ''c'' — целые числа. С помощью алгоритма Евклида может быть найдено полное решение уравнения такого типа{{sfn|Курант|2001|страницы = 74—76}}. Сначала с помощью этого алгоритма можно определить ''d'' = НОД(''a'', ''b''). Затем, используя расширенный алгоритм Евклида, определяются такие ''k'' и ''l'', что:

<math>a \cdot k + b \cdot l = d.</math>

То есть ''x = k'' и ''y = l'' - это частное решение уравнения при ''c = d''. Получается, что если ''c = q⋅d'', то ''x = q⋅k'', ''y = q⋅l'' - частное решение исходного уравнения, так как:

<math>a \cdot x + b \cdot y = a \cdot (q \cdot k) + b \cdot (q \cdot l) = q \cdot (a \cdot k + b \cdot l) = q \cdot d = c.</math> 

Обратно, если существует хотя бы одно решение уравнения, то ''c'' кратно ''d''. Это следует из того, что ''d'' делит и ''a'', и ''b'' (а значит, и всю левую часть), поэтому должно делить и ''c'' (правую часть). Таким образом, линейное диофантово уравнение имеет хотя бы одно решение тогда и только тогда, когда ''c'' кратно НОД(''a'', ''b'').

== Вариации и обобщения ==

=== Евклидово кольцо ===

[[Кольцо (алгебра)|Кольца]], в которых применим алгоритм Евклида, называются [[Евклидово кольцо|евклидовыми кольцами]]{{sfn|Курош|1973|страницы = 91-92}}. К ним относятся, в частности, кольца [[целые числа|целых чисел]] и кольца [[многочлен]]ов.

=== Обобщённый алгоритм Евклида для многочленов ===

Алгоритм Евклида и расширенный алгоритм Евклида естественным образом обобщается на [[кольцо многочленов]] ''k''[''x''] от одной переменной над произвольным [[Поле (алгебра)|полем]] ''k'', поскольку для таких многочленов определена операция деления с остатком. При выполнении алгоритма Евклида для многочленов аналогично алгоритму Евклида для целых чисел получается последовательность полиномиальных остатков (PRS){{sfn|Панкратьев|2007|страницы = 54-58}}.

{{Hider|
  title = Пример для кольца ''Z''[''x'']|
  hidden = 0 |
  title-style = text-align: left; height: auto; |
  content-style = text-align: left; |
  content =

Пусть cont(f) по определению — НОД коэффициентов многочлена f(x) из Z[x] — ''содержание'' многочлена. Частное от деления f(x) на cont(f) называется ''примитивной частью'' многочлена f(x) и обозначается primpart(f(x)). Эти определения понадобятся для нахождения НОД двух многочленов ''p<sub>1</sub>(x)'' и ''p<sub>2</sub>(x)'' в кольце Z[x]. Для многочленов над целыми числами верно следующее:

<math>cont(</math>НОД<math>\{p_1(x), p_2(x)\}) = </math>НОД<math>\{cont(p_1(x)), cont(p_2(x))\},</math>

<math>primpart(</math>НОД<math>\{p_1(x), p_2(x)\}) = </math>НОД<math>\{primpart(p_1(x)), primpart(p_2(x))\}.</math>

Таким образом, задача поиска НОД двух произвольных многочленов сводится к задаче поиска НОД примитивных полиномов.

Пусть есть два примитивных многочлена p<sub>1</sub>(x) и p<sub>2</sub>(x) из Z[x], для которых выполняется соотношение между их степенями: deg(p<sub>1</sub>(x)) = m и deg(p<sub>2</sub>(x)) = n, m > n. Деление многочленов с остатком предполагает точную делимость старшего коэффициента делимого на старший коэффициент делителя, в общем случае деление с остатком выполнить невозможно. Поэтому вводят алгоритм псевдоделения, который всё же позволяет получить псевдочастное и псевдоостаток (prem), которые будут сами по себе принадлежать множеству многочленов над целыми числами.

Под псевдоделением будем понимать, что самому делению предшествует умножение полинома <math>p_1(x)</math> на <math>(lc(p_2(x)))^{m-n+1}</math>, то есть

<math>lc(p_2(x))^{m-n+1}p_1(x)=p_2(x)q(x)+r_2(x), \deg(r(x)) < \deg(p_2(x)),</math>

где <math>q(x)</math> и <math>r(x)</math> — соответственно псевдочастное и псевдоостаток.

Итак, <math>p_1(x), p_2(x) \in Z[x]</math>, причём <math>\deg(p_1) = n_1 \geq \deg(p_2) = n_2</math>. Тогда алгоритм Евклида состоит из следующих шагов:

1. Вычисление НОД содержаний:

<math>c := </math>НОД<math> \{ cont(p_1), cont(p_2) \}</math>.

2. Вычисление примитивных частей:

<math>p_1'(x) := primpart(p_1(x));</math>

<math>p_2'(x) := primpart(p_2(x)).</math>

3. Построение последовательности полиномиальных остатков:

<math>p_1'(x), </math>

<math> p_2'(x), </math>

<math> p_3(x) := prem(p_1'(x), p_2'(x)), </math>

<math> p_4(x) := prem(p_2'(x), p_3(x)), </math>

<math> p_5(x) := prem(p_3(x), p_4(x)), </math>

<math> ... </math>

<math> p_h(x) := prem(p_{h-2}(x), p_{h-1}(x)).</math>

4. Возврат результата:

Если <math>\deg(p_h(x)) = 0</math>, то вернуть <math>c</math>, иначе вернуть <math>c \cdot primpart(p_h(x))</math>.
}}

=== Ускоренные версии алгоритма ===
* Одним из методов ускорения целочисленного алгоритма Евклида является использование ''симметричного остатка''{{sfn|Gathen|2013|страницы = 313-326}}:
:: <math>r_i \equiv r_{i-2} \pmod{r_{i-1}},</math>
: где
:: <math>-\frac{r_{i-1}}{2}\leq r_i\leq\frac{r_{i-1}}{2}.</math>

* Одна из версий ускоренного алгоритма Евклида для полиномов основывается на том, что промежуточные значения алгоритма в основном зависят от высоких степеней. Применение стратегии «[[Разделяй и властвуй (информатика)|разделяй и властвуй]]» позволяет уменьшить [[Теория сложности вычислений#Асимптотическая сложность|асимптотическую сложность]] алгоритма{{sfn|Gathen|2013|страницы = 313-326}}.

== Примечания ==
{{примечания}}

== Литература ==
{{Викиучебник|Примеры реализации алгоритма Евклида|Примеры реализации алгоритма Евклида}}
{{wikibooks|Примеры реализации алгоритма Евклида}}

* {{книга |ref = Мордухай-Болтовской|перевод = Мордухай-Болтовской Д. Д. |заглавие = Начала Евклида |том = 2 |ответственный = пер.с греч. и комм. Д. Д. Мордухая-Болтовского под ред. Выгодского М. Я. и Веселовского И. Н. |издательство = ГИТТЛ |год = 1949 |страниц = 511}}
* {{книга |ref = Виноградов |автор=Виноградов И. М. |заглавие=Основы теории чисел |издательство=ГИТТЛ |место=М.-Л. |год=1952 |страниц=180 |isbn = 978-5-811-40535-0 |ссылка = http://www.mccme.ru/free-books/djvu/vinogradov.djvu}}
* {{книга |ref = Курант |автор = Курант Р., Роббинс Г. |часть = Дополнение к главе I, § 4. |заглавие = Что такое математика? |nodot = 1 |издание = 3-e изд., испр. и доп |место = М. |год = 2001 |страниц = 568 |isbn = 5-900916-45-6 |ссылка = http://www.mccme.ru/free-books/pdf/kurant.htm}}
* {{статья |автор = Абрамов С. |заглавие = Самый знаменитый алгоритм |издание = [[Квант (журнал)|Квант]] |год = 1985 |номер = 11 |страницы = 44—46 |ссылка = http://kvant.mccme.ru/1985/11/samyj_znamenityj_algoritm.htm}}
* {{книга |ref = Кнут |автор = Кнут Д. Э. |заглавие = Искусство программирования |том = 2 |издательство = Вильямс |год = 2001 |страниц = 829 |isbn = 5-8459-0081-6}}
* {{книга |ref = Menezes |автор = Menezes A., van Oorschot P., Vanstone S. |заглавие = Handbook of Applied Cryptography |серия = Discrete Mathematics and Its Applications |издательство = CRC-Press |год = 1996 |страниц = 816 |isbn = 0-8493-8523-7}}
* {{книга |ref = Gathen |автор = von zur Gathen J., Gerhard J. |заглавие = Modern Computer Algebra |издательство = Cambridge University Press |год = 2013 |страниц = 808 |isbn = 978-1-107-03903-2}}
* {{книга |ref = Панкратьев |автор = Панкратьев Е. В. |заглавие = Элементы компьютерной алгебры |издательство = ИНТУИТ |год = 2007 |страниц = 217 |isbn = 978-5-955-60099-4}}
* {{книга |ref = Тихомиров |автор = Тихомиров В. М. |заглавие = Великие математики прошлого и их великие теоремы |издательство = [[МЦНМО]] |год = 2003 |издание = 2-е изд., испр |страниц = 16 |isbn=5-94057-110-7}}
* {{книга |ref = Калужин |автор = Калужин Л. А. |заглавие = Основная теорема арифметики |издание = [[Популярные лекции по математике]] |место = М. |издательство = Наука |год = 1969 |страниц = 33}}
* {{книга |ref = Хассе |автор = Хассе Г. |заглавие = Лекции по теории чисел |издательство = Изд. иностранной литературы |год = 1953 |страниц = 527}}
* {{книга |ref = Энгелер |автор = Энгелер Э. |заглавие = Метаматематика элементарной математики |место = М. |издательство  = Мир |год = 1987 |страниц = 128}}
* {{книга |ref = Цейтен |автор = Цейтен Г. Г. |заглавие = История математики в Древности и в Средние века |издательство = ГТТИ |год = 1932 |страниц = 232}}
* {{книга |ref = Курош |автор = Курош А. Г. |заглавие = Лекции по общей алгебре |место = М. |издательство  = Наука |год = 1973 |страниц = 400}}

== Ссылки ==
* Описание метода и коды программ [http://kvodo.ru/algoritm-evklida.html алгоритма Евклида].
* [http://mathinfinity.net.ru/articles/all_math/algorithm_evklida Обоснование алгоритма Евклида]
* [http://e-maxx.ru/algo/euclid_algorithm Алгоритм Евклида на e-maxx.ru]
* [http://landrina.ru/development/c-realizaciya-rasshirennogo-algoritma-evklida C# реализация расширенного алгоритма Эвклида]


[[Категория:Теоретико-числовые алгоритмы]]
[[Категория:Делимость и остатки]]
{{Добротная статья|Математика}}