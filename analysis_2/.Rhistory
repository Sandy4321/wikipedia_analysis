segments(x0 = 01, y0 = 01, x1 = 1/3,y1=1/2, lwd = 2, lty = 2, add = TRUE)
segments(x0 = 0, y0 = 0, x1 = 1/3,y1=1/2, lwd = 2, lty = 2, add = TRUE)
curve ((exp(x) - 1)/(exp(1) - 1), xlim = c(0,1), lwd = 1, lty = 1, add = TRUE)
curve(log(x*(e-1) + 1), xlim = c(0,1), lwd = 2, lty = 1, add = TRUE)
curve(log(x*(exp(1)-1) + 1), xlim = c(0,1), lwd = 2, lty = 1, add = TRUE)
legend(legend = c("f1","f2","f3","f4","f5","f6","f7","f8","f9"), x = 0.8, y = 0.5, lty = c(3,3,3,3,3,2,2,1,1), lwd = c(1,2,3,4,5,1,2,1,2))
legend(legend = c("f1","f2","f3","f4","f5","f6","f7","f8","f9"), x = 0.8, y = 0.5, lty = c(3,3,3,3,3,2,2,1,1), lwd = c(1,2,3,4,5,1,2,1,2), ccex = 0.5)
legend(legend = c("f1","f2","f3","f4","f5","f6","f7","f8","f9"), x = 0.8, y = 0.5, lty = c(3,3,3,3,3,2,2,1,1), lwd = c(1,2,3,4,5,1,2,1,2), cex = 0.5)
legend(legend = c("f1","f2","f3","f4","f5","f6","f7","f8","f9"), x = 0.8, y = 0.5, lty = c(3,3,3,3,3,2,2,1,1), lwd = c(1,2,3,4,5,1,2,1,2), cex = 0.7)
curve (x * 1, xlim = c(0,1), xlab = "Send proportion", ylab = "Current trust value", lwd = 1, lty = 3)
> curve (x * x, xlim = c(0,1), xlab = "Send proportion", ylab = "Current trust value", lwd = 2, lty = 3, add = TRUE)
> curve (x * x * x, xlim = c(0,1), xlab = "Send proportion", ylab = "Current trust value", lwd = 3, lty = 3, add = TRUE)
> curve (sqrt(x), xlim = c(0,1), xlab = "Send proportion", ylab = "Current trust value", lwd = 4, lty = 3, add = TRUE)
> curve (x ^ (1/3), xlim = c(0,1), xlab = "Send proportion", ylab = "Current trust value", lwd = 5, lty = 3, add = TRUE)
> segments(x0 = 0, y0 = 0, x1 = 2/3,y1=1/2, lwd = 1, lty = 2, add = TRUE)
Warning message:
In segments(x0 = 0, y0 = 0, x1 = 2/3, y1 = 1/2, lwd = 1, lty = 2,  :
"add" is not a graphical parameter
> segments(x0 = 1, y0 = 1, x1 = 2/3,y1=1/2, lwd = 1, lty = 2)
Warning messages:
1: "add" is not a graphical parameter
2: "add" is not a graphical parameter
> segments(x0 = 01, y0 = 01, x1 = 1/3,y1=1/2, lwd = 2, lty = 2, add = TRUE)
Warning messages:
1: "add" is not a graphical parameter
2: "add" is not a graphical parameter
3: In segments(x0 = 1, y0 = 1, x1 = 1/3, y1 = 1/2, lwd = 2, lty = 2,  :
"add" is not a graphical parameter
> segments(x0 = 0, y0 = 0, x1 = 1/3,y1=1/2, lwd = 2, lty = 2, add = TRUE)
Warning messages:
1: "add" is not a graphical parameter
2: "add" is not a graphical parameter
3: "add" is not a graphical parameter
4: "add" is not a graphical parameter
5: In segments(x0 = 0, y0 = 0, x1 = 1/3, y1 = 1/2, lwd = 2, lty = 2,  :
"add" is not a graphical parameter
> curve ((exp(x) - 1)/(exp(1) - 1), xlim = c(0,1), lwd = 1, lty = 1, add = TRUE)
Warning messages:
1: "add" is not a graphical parameter
2: "add" is not a graphical parameter
3: "add" is not a graphical parameter
4: "add" is not a graphical parameter
5: "add" is not a graphical parameter
6: "add" is not a graphical parameter
> curve(log(x*(e-1) + 1), xlim = c(0,1), lwd = 2, lty = 1, add = TRUE)
Error in eval(expr, envir, enclos) : object 'e' not found
In addition: Warning messages:
1: "add" is not a graphical parameter
2: "add" is not a graphical parameter
3: "add" is not a graphical parameter
4: "add" is not a graphical parameter
5: "add" is not a graphical parameter
6: "add" is not a graphical parameter
> curve(log(x*(exp(1)-1) + 1), xlim = c(0,1), lwd = 2, lty = 1, add = TRUE)
curve (x * 1, xlim = c(0,1), xlab = "Send proportion", ylab = "Current trust value", lwd = 1, lty = 3)
curve (x * x, xlim = c(0,1), xlab = "Send proportion", ylab = "Current trust value", lwd = 2, lty = 3, add = TRUE)
curve (x * x * x, xlim = c(0,1), xlab = "Send proportion", ylab = "Current trust value", lwd = 3, lty = 3, add = TRUE)
curve (sqrt(x), xlim = c(0,1), xlab = "Send proportion", ylab = "Current trust value", lwd = 4, lty = 3, add = TRUE)
curve (x ^ (1/3), xlim = c(0,1), xlab = "Send proportion", ylab = "Current trust value", lwd = 5, lty = 3, add = TRUE)
segments(x0 = 0, y0 = 0, x1 = 2/3,y1=1/2, lwd = 1, lty = 2)
segments(x0 = 1, y0 = 1, x1 = 2/3,y1=1/2, lwd = 1, lty = 2)
segments(x0 = 01, y0 = 01, x1 = 1/3,y1=1/2, lwd = 2, lty = 2)
segments(x0 = 0, y0 = 0, x1 = 1/3,y1=1/2, lwd = 2, lty = 2, add = TRUE)
curve ((exp(x) - 1)/(exp(1) - 1), xlim = c(0,1), lwd = 1, lty = 1, add = TRUE)
curve(log(x*(e-1) + 1), xlim = c(0,1), lwd = 2, lty = 1, add = TRUE)
curve(log(x*(exp(1)-1) + 1), xlim = c(0,1), lwd = 2, lty = 1, add = TRUE)
legend(legend = c("f1","f2","f3","f4","f5","f6","f7","f8","f9"), x = 0.8, y = 0.5, lty = c(3,3,3,3,3,2,2,1,1), lwd = c(1,2,3,4,5,1,2,1,2), cex = 0.7)
curve (x * 1, xlim = c(0,1), xlab = "Send proportion", ylab = "current_trust", lwd = 1, lty = 3)
curve (x * x, xlim = c(0,1), lwd = 2, lty = 3, add = TRUE)
curve (x * x * x, xlim = c(0,1), lwd = 3, lty = 3, add = TRUE)
curve (sqrt(x), xlim = c(0,1),  lwd = 4, lty = 3, add = TRUE)
curve (x ^ (1/3), xlim = c(0,1),  lwd = 5, lty = 3, add = TRUE)
segments(x0 = 0, y0 = 0, x1 = 2/3,y1=1/2, lwd = 1, lty = 2)
segments(x0 = 1, y0 = 1, x1 = 2/3,y1=1/2, lwd = 1, lty = 2)
segments(x0 = 01, y0 = 01, x1 = 1/3,y1=1/2, lwd = 2, lty = 2)
segments(x0 = 0, y0 = 0, x1 = 1/3,y1=1/2, lwd = 2, lty = 2, add = TRUE)
curve ((exp(x) - 1)/(exp(1) - 1), xlim = c(0,1), lwd = 1, lty = 1, add = TRUE)
curve(log(x*(e-1) + 1), xlim = c(0,1), lwd = 2, lty = 1, add = TRUE)
curve(log(x*(exp(1)-1) + 1), xlim = c(0,1), lwd = 2, lty = 1, add = TRUE)
legend(legend = c("f1","f2","f3","f4","f5","f6","f7","f8","f9"), x = 0.8, y = 0.5, lty = c(3,3,3,3,3,2,2,1,1), lwd = c(1,2,3,4,5,1,2,1,2), cex = 0.7)
x <- seq (0,1,length=10000)
y <- dnorm(x, mean = 0.2, sd = 0.15)
plot(x, y, xlim = (0,1))
plot(x, y, xlim = c(0,1))
plot(x, y, xlim = c(0,1), type = "l", lwd = 1)
hist(y)
barplot(y)
barplot(y, density = 1)
barplot(y, density = 20)
plot(dnorm(x))
memory.limit()
.Random.seed
install.packages("deepnet")
library(deepnet)
Var1 <- c(rnorm(50, 1, 0.5), rnorm(50, -0.6, 0.2))
Var2 <- c(rnorm(50, -0.8, 0.2), rnorm(50, 2, 1))
x <- matrix(c(Var1, Var2), nrow = 100, ncol = 2)
y <- c(rep(1, 50), rep(0, 50))
x
y
dnn <- sae.dnn.train(x, y, hidden = c(5, 5))
test_Var1 <- c(rnorm(50, 1, 0.5), rnorm(50, -0.6, 0.2))
test_Var2 <- c(rnorm(50, -0.8, 0.2), rnorm(50, 2, 1))
test_x <- matrix(c(test_Var1, test_Var2), nrow = 100, ncol = 2)
test_x
nn.test(dnn, test_x, y)
y = c(rep(1,30),rep(2,30),rep(0,40))
nn.test(dnn, test_x, y)
Var1 <- c(rep(1, 50), rep(0, 50))
Var2 <- c(rep(0, 50), rep(1, 50))
x3 <- matrix(c(Var1, Var2), nrow = 100, ncol = 2)
r1 <- rbm.train(x3, 3, numepochs = 20, cd = 10)
h <- c(0.2, 0.8, 0.1)
v <- rbm.down(r1, h)
v
Var1 <- c(rnorm(50, 1, 0.5), rnorm(50, -0.6, 0.2))
Var2 <- c(rnorm(50, -0.8, 0.2), rnorm(50, 2, 1))
x <- matrix(c(Var1, Var2), nrow = 100, ncol = 2)
y <- c(rep(1, 50), rep(0, 50))
nn <- nn.train(x, y, hidden = c(5))
test_Var1 <- c(rnorm(50, 1, 0.5), rnorm(50, -0.6, 0.2))
test_Var2 <- c(rnorm(50, -0.8, 0.2), rnorm(50, 2, 1))
test_x <- matrix(c(test_Var1, test_Var2), nrow = 100, ncol = 2)
err <- nn.test(nn, test_x, y)
err
test_x
y
nn
nn.predict(test_x)
nn.predict(nn,test_x)
nn.test(nn, test_x, y)
nn.test(nn, test_x, y, t = 0.3)
y = c (rep(0,20),rep(1,20),rep(2,60))
length(y)
y = as.factor(y)
y
y = as.character(y)
y
y = as.factor(y)
y
dnn <- dbn.dnn.train(x, y, hidden = c(5, 5))
class(y)
y = data.matrix(y)
y
dnn <- dbn.dnn.train(x, y, hidden = c(5, 5))
x
y
dnn <- dbn.dnn.train(x, y, hidden = c(5, 5))
dnn <- nn.train(x, y, hidden = c(5, 5))
y = as.vector(y)
y
dnn <- nn.train(x, y, hidden = c(5, 5))
y = c (rep(0,20),rep(1,20),rep(2,60))
dnn <- dbn.dnn.train(x, y, hidden = c(5, 5))
nn.predict(nn, test_x)
?l
?I
data ("AirPassengers")
AP = AirPassengers
class (AP)
plot (AP)
plot (aggregate(AP))
x = c(rep(0,400),rep(1,560))
library(BSDA)
z.test(x, sigma.x = 6.8)
install.packages("OCI")
install.packages("ROracle")
install.packages("ROracle")
install.packages("OCI")
install.packages("ROracle")
y = c(1,1,1,1,rep(0,6))
y
x = 1:10
plot (y ~ x)
plot (y ~ x, ylab = "Sending behavior", xlab = "Round number")
lines(y)
install.packages("h2o")
package_df <- as.data.frame(installed.packages("/Users/qdang/Rlibs"))
package_list <- as.character(package_df$Package)
package_list
install.packages(package_list)
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
names = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n")
plot (y, xaxt = "n",type = "l")
plot (y, xaxt = "n",type = "lo")
plot (y, xaxt = "n",type = "s")
?plot
plot (y, xaxt = "n",type = "b")
axis(1, at=1:10,labels = names)
names = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
axis(1, at=1:10,labels = names)
axis(1, at=seq(1, 10, by=1), labels = FALSE)
plot (y, xaxt = "n",type = "b")
axis(1, at=seq(1, 10, by=1), labels = FALSE)
text(seq(1, 10, by=1), par("usr")[3] - 0.2, labels = names, srt = 45, pos = 1, xpd = TRUE)
?axis
plot (y, xaxt = "n",type = "b")
axis(1, at=seq(1, 10, by=1), labels = FALSE)
text(seq(1, 10, by=1), par("usr")[3] - 0.2, labels = names, srt = 45, pos = 1, xpd = TRUE)
axis(1, at=1:10, labels=names)
axis(1, at=1:10, labels=names,las=2)
axis(1, at=1:10, labels=names,las=1)
axis(1, at=1:10, labels=names,las=0)
axis(1, at=1:10, labels=names,las=2)
plot (y, xaxt = "n",type = "b")
axis(1, at=1:10, labels=names,las=1)
axis(1, at=1:10, labels=names,las=3)
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b")
axis(1, at=1:10, labels=names,las=2)
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy")
axis(1, at=1:10, labels=names,las=2)
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25,
srt = 60, adj= 1, xpd = TRUE,
labels = x_labels, cex=0.65)
text(1:10, par("usr")[3]-0.25,
srt = 60, adj= 1, xpd = TRUE,
labels = x_labels, cex=0.65)
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(8,8,1,1))
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(8,10,1,1))
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(8,1,1,1))
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(8,5,1,1))
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(10,5,1,1))
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(15,5,1,1))
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.59929717,0.6053492,0.61310947,0.61657476,0.6257016,0.62706816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58929717,0.5953492,0.60310947,0.61057476,0.6157016,0.62106816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58929717,0.5953492,0.60310947,0.60857476,0.6157016,0.62106816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5973492,0.60310947,0.60857476,0.6157016,0.62106816,0.6289228,0.63116795,0.63546294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5973492,0.60310947,0.60857476,0.6157016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5923492,0.59810947,0.60857476,0.6157016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5903492,0.59410947,0.59857476,0.6157016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5903492,0.59410947,0.59857476,0.6057016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5903492,0.59410947,0.59857476,0.6057016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2, ylim = c(0.58,0.64))
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.578,0.58629717,0.5903492,0.59410947,0.59857476,0.6057016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2, ylim = c(0.57,0.64))
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.578,0.58629717,0.5903492,0.59410947,0.59857476,0.6057016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2, ylim = c(0.57,0.64))
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.578,0.58629717,0.5903492,0.59410947,0.59857476,0.6057016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2, ylim = c(0.57,0.64))
axis(1, at=seq(1, 10, by=1), labels = FALSE)
text(seq(1, 10, by=1), par("usr")[3] - 0.2, labels = x_labels, srt = 45, pos = 1, xpd = TRUE)
original.parameters<-par()
par(xaxt="n")
text(seq(1, 10, by=1), par("usr")[3] - 0.2, labels = x_labels, srt = 45, pos = 1, xpd = TRUE)
e_l = 841372
0.9628 * e_l
rep(1,10)
x1 = c(rep(1,810073), rep(0, (e_l - rep(1,810073))))
x1 = c(rep(1,810073), rep(0, (e_l - 810073)))
len(x1)
length(x1)
0.962 * e_l
x2 = c(rep(1, 809400), rep (0, e_l -809400))
length(x2)
t.test(x1,x2)
s_l = 549202
0.9256 * s_l
x3 = c(rep(1,508341),rep(0, s_l - 508341))
length(x3)
0.9128 * s_l
x4 = c(rep(1,501312),rep(0, s_l - 501312))
length(x4)
t.test (x3,x4)
89.94-89.6
wl = 103869
0.8994 * 103869
x5 = c(rep(1,93420), rep(0, wl - 93420))
0.896 * wl
x6 = c(rep(1,93067), rep(0, wl - 93067))
t.test (x5.x6)
t.test (x5,x6)
x1 = c(15 , 12,  8 ,  8 ,  7 ,  7 ,  7 ,  6 ,  5,   3)
x2 = c(10  ,25,  17 , 11,  13 , 17  ,20,  13,  9  , 15)
cor(x1,x2)
cor(x1,x2,method = "pearson")
x1 = c(15,12,8,8,7,7,7,6,5,3)
x2 = c(10,25,17,11,13,17,20,13,9,15)
summary (lm (x2 ~ x1))
poisson()
ppois(5, 2.5)
pois(3)
library (stats)
pois(3)
x1 = rep(1,4)
x2 = c(1,1,rep(0,20))
library(TeachingDemos)
z.test(x1,x2)
t.test(x1,x2)
z.test(x1)
z.test(x1,6.8)
library(BSDA)
z.test(z1)
z.test(x1)
z.test(x1,sigma.x = 6.8)
z.test(x1,x2)
z.test(x1,x2,sigma.x = 6.8,sigma.y = 6.8)
install.packages("PTAk")
library (PTAk)
install.packages("bnlearn")
library (bnlearn)
dag <- empty.graph(nodes = c("A","S","E","O","R","T"))
dag
dag <- set.arc(dag, from = "A", to = "E")
dag <- set.arc(dag, from = "S", to = "E")
dag
dag <- set.arc(dag, from = "E", to = "O")
dag <- set.arc(dag, from = "E", to = "R")
dag <- set.arc(dag, from = "O", to = "T")
dag <- set.arc(dag, from = "R", to = "T")
dag
modelstring(dag)
library (h2o)
h2o.init()
covtype = h2o.importFile("https://s3.amazonaws.com/h2o-public-test-data/smalldata/covtype/covtype.20k.data")
covtype[,55] <- as.factor(covtype[,55])
dlmodel = h2o.deeplearning(x=1:54, y=55, training_frame =covtype, hidden=c(17,191), epochs=1, balance_classes=FALSE, reproducible=TRUE, seed=1234, export_weights_and_biases=TRUE)
h2o.shutdown()
library(h2o)
?h2o.deeplearning
library (h2o)
?h2o.deeplearning
install.packages("h2o")
install.packages("h2o")
library (h2o)
16*75*45
14*40*65
42*30*75
13*20*80
15*10*80
x1 = c(0.16,0.14,0.42,0.13,0.15)
sum (x1)
x2  = c(0.75,0.4,0.3, 0.2,0.1)
x3 = (0.45,0.65,0,75,0.8,0.8)
x3 = c(0.45,0.65,0,75,0.8,0.8)
M = 10000000
x1*x2*x3*M
x1*x2*x3*rep(M,5)*10*10.5
x1*x2*x3
revenue = 0
for (i in 1:5) {sum = sum + M * x1[i]*x2[i]*x3[i]*10*10.5}
sum = 0
for (i in 1:5) {sum = sum + M * x1[i]*x2[i]*x3[i]*10*10.5}
sum
for (i in 1:5) {sum = sum + M * x1[i]*x2[i]*x3[i]*10*10}
sum
sum = 0
for (i in 1:5) {sum = sum + M * x1[i]*x2[i]*x3[i]*10*10}
sum
2155020000 / 1000 / 1000
M
x1
x2
x3
x3 = c(.45,.65,.75,.8,.8)
x3
sum = 0
for (i in 1:5) {sum = sum + M * x1[i]*x2[i]*x3[i]*10*10}
sum
sum = 0
for (i in 1:5) {sum = sum + M * x1[i]*x2[i]*x3[i]*10*10.5}
sum
228585000 / 1000/ 1000
1-0.36-.02-0.26
0.36*12 + .2*10+.26*9
8.66/3
.36*10*M
1*1.0003*1.0009*1.0016*1.0026*1.0042*1.0047*1.0056*1.0063*1.007*1.0074*1.0078*1.0081*1.0083
1.066723*15
setwd ("/Users/qdang/workspace/wikipedia_datasets/editquality_dataset/version2/doc2vec_len_2000")
train = read.table("word2vec_train_content.txt")
dim(train)
train_label = read.table("word2vec_train_label.txt")
test = read.table("word2vec_test_content.txt")
test_label = read.table("word2vec_test_label.txt")
colnames(train_label) = c("label")
colnames(test_label) = c("label")
train = cbind(train, train_label)
dim (train)
test = cbind(test, test_label)
str(train)
history()
data = rbind (train, test)
library (h2o)
h2o.init()
str (data$label)
dnn1 = h2o.deeplearning(x=1:2000,y=2001,training_frame = as.h2o(data),nfolds = 5)
dnn1
h2o.performance(dnn1,xval = TRUE)
setwd ("../tokenize_text_classes/")
train = read.table("word2vec_train_content.txt")
train_label = read.table("word2vec_train_label.txt")
test = read.table("word2vec_test_content.txt")
test_label = read.table("word2vec_test_label.txt")
colnames(train_label) = c("label")
colnames(test_label) = c("label")
train = cbind(train, train_label)
test = cbind(test, test_label)
data = rbind (train, test)
dim (data)
dnn1 = h2o.deeplearning(x=1:500,y=501,training_frame = as.h2o(data),nfolds = 5)
dnn1
dnn1 = h2o.deeplearning(x=1:500,y=501,training_frame = as.h2o(data),nfolds = 5,hidden = c(2000,1000,500,200))
dnn1
setwd("~/workspace/wikipedia_analysis/analysis_2")
all_data = read.table ("enwiki.features_wp10.30k.tsv")
head (all_data$V25)
nrow (all_data)
write.csv(x = all_data$V25, file = "~/Desktop/enwikilabel", row.names = FALSE, col.names = FALSE)
